// Code generated by Prisma (prisma@1.29.1). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

import { DocumentNode } from "graphql";
import {
  makePrismaClientClass,
  BaseClientOptions,
  Model
} from "prisma-client-lib";
import { typeDefs } from "./prisma-schema";

export type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> &
  U[keyof U];

export interface Exists {
  daysave: (where?: DaysaveWhereInput) => Promise<boolean>;
}

export interface Node {}

export type FragmentableArray<T> = Promise<Array<T>> & Fragmentable;

export interface Fragmentable {
  $fragment<T>(fragment: string | DocumentNode): Promise<T>;
}

export interface Prisma {
  $exists: Exists;
  $graphql: <T = any>(
    query: string,
    variables?: { [key: string]: any }
  ) => Promise<T>;

  /**
   * Queries
   */

  daysave: (where: DaysaveWhereUniqueInput) => DaysavePromise;
  daysaves: (
    args?: {
      where?: DaysaveWhereInput;
      orderBy?: DaysaveOrderByInput;
      skip?: Int;
      after?: String;
      before?: String;
      first?: Int;
      last?: Int;
    }
  ) => FragmentableArray<Daysave>;
  daysavesConnection: (
    args?: {
      where?: DaysaveWhereInput;
      orderBy?: DaysaveOrderByInput;
      skip?: Int;
      after?: String;
      before?: String;
      first?: Int;
      last?: Int;
    }
  ) => DaysaveConnectionPromise;
  node: (args: { id: ID_Output }) => Node;

  /**
   * Mutations
   */

  createDaysave: (data: DaysaveCreateInput) => DaysavePromise;
  updateDaysave: (
    args: { data: DaysaveUpdateInput; where: DaysaveWhereUniqueInput }
  ) => DaysavePromise;
  updateManyDaysaves: (
    args: { data: DaysaveUpdateManyMutationInput; where?: DaysaveWhereInput }
  ) => BatchPayloadPromise;
  upsertDaysave: (
    args: {
      where: DaysaveWhereUniqueInput;
      create: DaysaveCreateInput;
      update: DaysaveUpdateInput;
    }
  ) => DaysavePromise;
  deleteDaysave: (where: DaysaveWhereUniqueInput) => DaysavePromise;
  deleteManyDaysaves: (where?: DaysaveWhereInput) => BatchPayloadPromise;

  /**
   * Subscriptions
   */

  $subscribe: Subscription;
}

export interface Subscription {
  daysave: (
    where?: DaysaveSubscriptionWhereInput
  ) => DaysaveSubscriptionPayloadSubscription;
}

export interface ClientConstructor<T> {
  new (options?: BaseClientOptions): T;
}

/**
 * Types
 */

export type DaysaveOrderByInput =
  | "_id_ASC"
  | "_id_DESC"
  | "__v_ASC"
  | "__v_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC";

export type MutationType = "CREATED" | "UPDATED" | "DELETED";

export type DaysaveWhereUniqueInput = AtLeastOne<{
  _id: ID_Input;
}>;

export interface DaysaveWhereInput {
  _id?: ID_Input;
  _id_not?: ID_Input;
  _id_in?: ID_Input[] | ID_Input;
  _id_not_in?: ID_Input[] | ID_Input;
  _id_lt?: ID_Input;
  _id_lte?: ID_Input;
  _id_gt?: ID_Input;
  _id_gte?: ID_Input;
  _id_contains?: ID_Input;
  _id_not_contains?: ID_Input;
  _id_starts_with?: ID_Input;
  _id_not_starts_with?: ID_Input;
  _id_ends_with?: ID_Input;
  _id_not_ends_with?: ID_Input;
  __v?: Int;
  __v_not?: Int;
  __v_in?: Int[] | Int;
  __v_not_in?: Int[] | Int;
  __v_lt?: Int;
  __v_lte?: Int;
  __v_gt?: Int;
  __v_gte?: Int;
  createdAt?: DateTimeInput;
  createdAt_not?: DateTimeInput;
  createdAt_in?: DateTimeInput[] | DateTimeInput;
  createdAt_not_in?: DateTimeInput[] | DateTimeInput;
  createdAt_lt?: DateTimeInput;
  createdAt_lte?: DateTimeInput;
  createdAt_gt?: DateTimeInput;
  createdAt_gte?: DateTimeInput;
  items?: DaysaveItemWhereInput;
  updatedAt?: DateTimeInput;
  updatedAt_not?: DateTimeInput;
  updatedAt_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_not_in?: DateTimeInput[] | DateTimeInput;
  updatedAt_lt?: DateTimeInput;
  updatedAt_lte?: DateTimeInput;
  updatedAt_gt?: DateTimeInput;
  updatedAt_gte?: DateTimeInput;
  AND?: DaysaveWhereInput[] | DaysaveWhereInput;
}

export interface DaysaveItemWhereInput {
  AdviceAnimals?: DaysaveItemAdviceAnimalWhereInput;
  Android?: DaysaveItemAndroidWhereInput;
  AnimalsBeingDerps?: DaysaveItemAnimalsBeingDerpWhereInput;
  AnimalsBeingJerks?: DaysaveItemAnimalsBeingJerkWhereInput;
  anime?: DaysaveItemAnimeWhereInput;
  apple?: DaysaveItemAppleWhereInput;
  AskMen?: DaysaveItemAskManWhereInput;
  AskReddit?: DaysaveItemAskRedditWhereInput;
  askscience?: DaysaveItemAskscienceWhereInput;
  AskWomen?: DaysaveItemAskWomanWhereInput;
  assholedesign?: DaysaveItemAssholedesignWhereInput;
  aww?: DaysaveItemAwwWhereInput;
  baseball?: DaysaveItemBaseballWhereInput;
  BlackPeopleTwitter?: DaysaveItemBlackPeopleTwitterWhereInput;
  boardgames?: DaysaveItemBoardgameWhereInput;
  buildapc?: DaysaveItemBuildapcWhereInput;
  cars?: DaysaveItemCarWhereInput;
  cats?: DaysaveItemCatWhereInput;
  ChoosingBeggars?: DaysaveItemChoosingBeggarWhereInput;
  comics?: DaysaveItemComicWhereInput;
  conspiracy?: DaysaveItemConspiracyWhereInput;
  Cooking?: DaysaveItemCookingWhereInput;
  CrappyDesign?: DaysaveItemCrappyDesignWhereInput;
  dankmemes?: DaysaveItemDankmemeWhereInput;
  DestinyTheGame?: DaysaveItemDestinyTheGameWhereInput;
  DnD?: DaysaveItemDnDWhereInput;
  Documentaries?: DaysaveItemDocumentaryWhereInput;
  dogs?: DaysaveItemDogWhereInput;
  drawing?: DaysaveItemDrawingWhereInput;
  DunderMifflin?: DaysaveItemDunderMifflinWhereInput;
  EarthPorn?: DaysaveItemEarthPornWhereInput;
  europe?: DaysaveItemEuropeWhereInput;
  explainlikeimfive?: DaysaveItemExplainlikeimfiveWhereInput;
  Eyebleach?: DaysaveItemEyebleachWhereInput;
  Fitness?: DaysaveItemFitnessWhereInput;
  food?: DaysaveItemFoodWhereInput;
  FoodPorn?: DaysaveItemFoodPornWhereInput;
  FortNiteBR?: DaysaveItemFortNiteBRWhereInput;
  Frugal?: DaysaveItemFrugalWhereInput;
  funny?: DaysaveItemFunnyWhereInput;
  Futurology?: DaysaveItemFuturologyWhereInput;
  gadgets?: DaysaveItemGadgetWhereInput;
  Games?: DaysaveItemGameWhereInput;
  gaming?: DaysaveItemGamingWhereInput;
  gardening?: DaysaveItemGardeningWhereInput;
  gifs?: DaysaveItemGifWhereInput;
  gonewild?: DaysaveItemGonewildWhereInput;
  hiphopheads?: DaysaveItemHiphopheadWhereInput;
  hockey?: DaysaveItemHockeyWhereInput;
  iamverysmart?: DaysaveItemIamverysmartWhereInput;
  instant_regret?: DaysaveItemInstant_regretWhereInput;
  interestingasfuck?: DaysaveItemInterestingasfuckWhereInput;
  Jokes?: DaysaveItemJokeWhereInput;
  leagueoflegends?: DaysaveItemLeagueoflegendWhereInput;
  legaladvice?: DaysaveItemLegaladviceWhereInput;
  LifeProTips?: DaysaveItemLifeProTipWhereInput;
  listentothis?: DaysaveItemListentothiWhereInput;
  MadeMeSmile?: DaysaveItemMadeMeSmileWhereInput;
  me_irl?: DaysaveItemMe_irlWhereInput;
  MemeEconomy?: DaysaveItemMemeEconomyWhereInput;
  memes?: DaysaveItemMemeWhereInput;
  mildlyinfuriating?: DaysaveItemMildlyinfuriatingWhereInput;
  mildlyinteresting?: DaysaveItemMildlyinterestingWhereInput;
  Minecraft?: DaysaveItemMinecraftWhereInput;
  MMA?: DaysaveItemMMAWhereInput;
  MovieDetails?: DaysaveItemMovieDetailWhereInput;
  movies?: DaysaveItemMovieWhereInput;
  MurderedByWords?: DaysaveItemMurderedByWordWhereInput;
  natureismetal?: DaysaveItemNatureismetalWhereInput;
  nba?: DaysaveItemNbaWhereInput;
  nevertellmetheodds?: DaysaveItemNevertellmetheoddWhereInput;
  news?: DaysaveItemNewsWhereInput;
  nfl?: DaysaveItemNflWhereInput;
  niceguys?: DaysaveItemNiceguyWhereInput;
  NintendoSwitch?: DaysaveItemNintendoSwitchWhereInput;
  nosleep?: DaysaveItemNosleepWhereInput;
  NoStupidQuestions?: DaysaveItemNoStupidQuestionWhereInput;
  nottheonion?: DaysaveItemNottheonionWhereInput;
  oddlysatisfying?: DaysaveItemOddlysatisfyingWhereInput;
  OldSchoolCool?: DaysaveItemOldSchoolCoolWhereInput;
  Overwatch?: DaysaveItemOverwatchWhereInput;
  pcgaming?: DaysaveItemPcgamingWhereInput;
  pcmasterrace?: DaysaveItemPcmasterraceWhereInput;
  personalfinance?: DaysaveItemPersonalfinanceWhereInput;
  PewdiepieSubmissions?: DaysaveItemPewdiepieSubmissionWhereInput;
  photography?: DaysaveItemPhotographyWhereInput;
  pics?: DaysaveItemPicWhereInput;
  pokemon?: DaysaveItemPokemonWhereInput;
  politics?: DaysaveItemPoliticWhereInput;
  PrequelMemes?: DaysaveItemPrequelMemeWhereInput;
  PS4?: DaysaveItemPS4WhereInput;
  reactiongifs?: DaysaveItemReactiongifWhereInput;
  relationship_advice?: DaysaveItemRelationship_adviceWhereInput;
  relationships?: DaysaveItemRelationshipWhereInput;
  rickandmorty?: DaysaveItemRickandmortyWhereInput;
  Roadcam?: DaysaveItemRoadcamWhereInput;
  RoastMe?: DaysaveItemRoastMeWhereInput;
  science?: DaysaveItemScienceWhereInput;
  sex?: DaysaveItemSexWhereInput;
  shittyfoodporn?: DaysaveItemShittyfoodpornWhereInput;
  Showerthoughts?: DaysaveItemShowerthoughtWhereInput;
  SkincareAddiction?: DaysaveItemSkincareAddictionWhereInput;
  slowcooking?: DaysaveItemSlowcookingWhereInput;
  space?: DaysaveItemSpaceWhereInput;
  sports?: DaysaveItemSportWhereInput;
  starterpacks?: DaysaveItemStarterpackWhereInput;
  StarWars?: DaysaveItemStarWarWhereInput;
  streetwear?: DaysaveItemStreetwearWhereInput;
  tattoos?: DaysaveItemTattooWhereInput;
  teenagers?: DaysaveItemTeenagerWhereInput;
  television?: DaysaveItemTelevisionWhereInput;
  thatHappened?: DaysaveItemThatHappenedWhereInput;
  The_Donald?: DaysaveItemThe_DonaldWhereInput;
  therewasanattempt?: DaysaveItemTherewasanattemptWhereInput;
  Tinder?: DaysaveItemTinderWhereInput;
  todayilearned?: DaysaveItemTodayilearnedWhereInput;
  trashy?: DaysaveItemTrashyWhereInput;
  travel?: DaysaveItemTravelWhereInput;
  trees?: DaysaveItemTreeWhereInput;
  TwoXChromosomes?: DaysaveItemTwoXChromosomeWhereInput;
  Unexpected?: DaysaveItemUnexpectedWhereInput;
  videos?: DaysaveItemVideoWhereInput;
  WatchPeopleDieInside?: DaysaveItemWatchPeopleDieInsideWhereInput;
  Wellthatsucks?: DaysaveItemWellthatsuckWhereInput;
  Whatcouldgowrong?: DaysaveItemWhatcouldgowrongWhereInput;
  WhitePeopleTwitter?: DaysaveItemWhitePeopleTwitterWhereInput;
  wholesomememes?: DaysaveItemWholesomememeWhereInput;
  woodworking?: DaysaveItemWoodworkingWhereInput;
  worldnews?: DaysaveItemWorldnewWhereInput;
  WritingPrompts?: DaysaveItemWritingPromptWhereInput;
  WTF?: DaysaveItemWTFWhereInput;
  xboxone?: DaysaveItemXboxoneWhereInput;
  YouShouldKnow?: DaysaveItemYouShouldKnowWhereInput;
  AND?: DaysaveItemWhereInput[] | DaysaveItemWhereInput;
}

export interface DaysaveItemAdviceAnimalWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemAdviceAnimalWhereInput[] | DaysaveItemAdviceAnimalWhereInput;
}

export interface DaysaveItemAndroidWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemAndroidWhereInput[] | DaysaveItemAndroidWhereInput;
}

export interface DaysaveItemAnimalsBeingDerpWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemAnimalsBeingDerpWhereInput[]
    | DaysaveItemAnimalsBeingDerpWhereInput;
}

export interface DaysaveItemAnimalsBeingJerkWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemAnimalsBeingJerkWhereInput[]
    | DaysaveItemAnimalsBeingJerkWhereInput;
}

export interface DaysaveItemAnimeWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemAnimeWhereInput[] | DaysaveItemAnimeWhereInput;
}

export interface DaysaveItemAppleWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemAppleWhereInput[] | DaysaveItemAppleWhereInput;
}

export interface DaysaveItemAskManWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemAskManWhereInput[] | DaysaveItemAskManWhereInput;
}

export interface DaysaveItemAskRedditWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemAskRedditWhereInput[] | DaysaveItemAskRedditWhereInput;
}

export interface DaysaveItemAskscienceWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemAskscienceWhereInput[] | DaysaveItemAskscienceWhereInput;
}

export interface DaysaveItemAskWomanWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemAskWomanWhereInput[] | DaysaveItemAskWomanWhereInput;
}

export interface DaysaveItemAssholedesignWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemAssholedesignWhereInput[]
    | DaysaveItemAssholedesignWhereInput;
}

export interface DaysaveItemAwwWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemAwwWhereInput[] | DaysaveItemAwwWhereInput;
}

export interface DaysaveItemBaseballWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemBaseballWhereInput[] | DaysaveItemBaseballWhereInput;
}

export interface DaysaveItemBlackPeopleTwitterWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemBlackPeopleTwitterWhereInput[]
    | DaysaveItemBlackPeopleTwitterWhereInput;
}

export interface DaysaveItemBoardgameWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemBoardgameWhereInput[] | DaysaveItemBoardgameWhereInput;
}

export interface DaysaveItemBuildapcWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemBuildapcWhereInput[] | DaysaveItemBuildapcWhereInput;
}

export interface DaysaveItemCarWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemCarWhereInput[] | DaysaveItemCarWhereInput;
}

export interface DaysaveItemCatWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemCatWhereInput[] | DaysaveItemCatWhereInput;
}

export interface DaysaveItemChoosingBeggarWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemChoosingBeggarWhereInput[]
    | DaysaveItemChoosingBeggarWhereInput;
}

export interface DaysaveItemComicWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemComicWhereInput[] | DaysaveItemComicWhereInput;
}

export interface DaysaveItemConspiracyWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemConspiracyWhereInput[] | DaysaveItemConspiracyWhereInput;
}

export interface DaysaveItemCookingWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemCookingWhereInput[] | DaysaveItemCookingWhereInput;
}

export interface DaysaveItemCrappyDesignWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemCrappyDesignWhereInput[] | DaysaveItemCrappyDesignWhereInput;
}

export interface DaysaveItemDankmemeWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemDankmemeWhereInput[] | DaysaveItemDankmemeWhereInput;
}

export interface DaysaveItemDestinyTheGameWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemDestinyTheGameWhereInput[]
    | DaysaveItemDestinyTheGameWhereInput;
}

export interface DaysaveItemDnDWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemDnDWhereInput[] | DaysaveItemDnDWhereInput;
}

export interface DaysaveItemDocumentaryWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemDocumentaryWhereInput[] | DaysaveItemDocumentaryWhereInput;
}

export interface DaysaveItemDogWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemDogWhereInput[] | DaysaveItemDogWhereInput;
}

export interface DaysaveItemDrawingWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemDrawingWhereInput[] | DaysaveItemDrawingWhereInput;
}

export interface DaysaveItemDunderMifflinWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemDunderMifflinWhereInput[]
    | DaysaveItemDunderMifflinWhereInput;
}

export interface DaysaveItemEarthPornWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemEarthPornWhereInput[] | DaysaveItemEarthPornWhereInput;
}

export interface DaysaveItemEuropeWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemEuropeWhereInput[] | DaysaveItemEuropeWhereInput;
}

export interface DaysaveItemExplainlikeimfiveWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemExplainlikeimfiveWhereInput[]
    | DaysaveItemExplainlikeimfiveWhereInput;
}

export interface DaysaveItemEyebleachWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemEyebleachWhereInput[] | DaysaveItemEyebleachWhereInput;
}

export interface DaysaveItemFitnessWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemFitnessWhereInput[] | DaysaveItemFitnessWhereInput;
}

export interface DaysaveItemFoodWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemFoodWhereInput[] | DaysaveItemFoodWhereInput;
}

export interface DaysaveItemFoodPornWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemFoodPornWhereInput[] | DaysaveItemFoodPornWhereInput;
}

export interface DaysaveItemFortNiteBRWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemFortNiteBRWhereInput[] | DaysaveItemFortNiteBRWhereInput;
}

export interface DaysaveItemFrugalWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemFrugalWhereInput[] | DaysaveItemFrugalWhereInput;
}

export interface DaysaveItemFunnyWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemFunnyWhereInput[] | DaysaveItemFunnyWhereInput;
}

export interface DaysaveItemFuturologyWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemFuturologyWhereInput[] | DaysaveItemFuturologyWhereInput;
}

export interface DaysaveItemGadgetWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemGadgetWhereInput[] | DaysaveItemGadgetWhereInput;
}

export interface DaysaveItemGameWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemGameWhereInput[] | DaysaveItemGameWhereInput;
}

export interface DaysaveItemGamingWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemGamingWhereInput[] | DaysaveItemGamingWhereInput;
}

export interface DaysaveItemGardeningWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemGardeningWhereInput[] | DaysaveItemGardeningWhereInput;
}

export interface DaysaveItemGifWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemGifWhereInput[] | DaysaveItemGifWhereInput;
}

export interface DaysaveItemGonewildWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemGonewildWhereInput[] | DaysaveItemGonewildWhereInput;
}

export interface DaysaveItemHiphopheadWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemHiphopheadWhereInput[] | DaysaveItemHiphopheadWhereInput;
}

export interface DaysaveItemHockeyWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemHockeyWhereInput[] | DaysaveItemHockeyWhereInput;
}

export interface DaysaveItemIamverysmartWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemIamverysmartWhereInput[] | DaysaveItemIamverysmartWhereInput;
}

export interface DaysaveItemInstant_regretWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemInstant_regretWhereInput[]
    | DaysaveItemInstant_regretWhereInput;
}

export interface DaysaveItemInterestingasfuckWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemInterestingasfuckWhereInput[]
    | DaysaveItemInterestingasfuckWhereInput;
}

export interface DaysaveItemJokeWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemJokeWhereInput[] | DaysaveItemJokeWhereInput;
}

export interface DaysaveItemLeagueoflegendWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemLeagueoflegendWhereInput[]
    | DaysaveItemLeagueoflegendWhereInput;
}

export interface DaysaveItemLegaladviceWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemLegaladviceWhereInput[] | DaysaveItemLegaladviceWhereInput;
}

export interface DaysaveItemLifeProTipWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemLifeProTipWhereInput[] | DaysaveItemLifeProTipWhereInput;
}

export interface DaysaveItemListentothiWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemListentothiWhereInput[] | DaysaveItemListentothiWhereInput;
}

export interface DaysaveItemMadeMeSmileWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemMadeMeSmileWhereInput[] | DaysaveItemMadeMeSmileWhereInput;
}

export interface DaysaveItemMe_irlWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemMe_irlWhereInput[] | DaysaveItemMe_irlWhereInput;
}

export interface DaysaveItemMemeEconomyWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemMemeEconomyWhereInput[] | DaysaveItemMemeEconomyWhereInput;
}

export interface DaysaveItemMemeWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemMemeWhereInput[] | DaysaveItemMemeWhereInput;
}

export interface DaysaveItemMildlyinfuriatingWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemMildlyinfuriatingWhereInput[]
    | DaysaveItemMildlyinfuriatingWhereInput;
}

export interface DaysaveItemMildlyinterestingWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemMildlyinterestingWhereInput[]
    | DaysaveItemMildlyinterestingWhereInput;
}

export interface DaysaveItemMinecraftWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemMinecraftWhereInput[] | DaysaveItemMinecraftWhereInput;
}

export interface DaysaveItemMMAWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemMMAWhereInput[] | DaysaveItemMMAWhereInput;
}

export interface DaysaveItemMovieDetailWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemMovieDetailWhereInput[] | DaysaveItemMovieDetailWhereInput;
}

export interface DaysaveItemMovieWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemMovieWhereInput[] | DaysaveItemMovieWhereInput;
}

export interface DaysaveItemMurderedByWordWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemMurderedByWordWhereInput[]
    | DaysaveItemMurderedByWordWhereInput;
}

export interface DaysaveItemNatureismetalWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemNatureismetalWhereInput[]
    | DaysaveItemNatureismetalWhereInput;
}

export interface DaysaveItemNbaWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemNbaWhereInput[] | DaysaveItemNbaWhereInput;
}

export interface DaysaveItemNevertellmetheoddWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemNevertellmetheoddWhereInput[]
    | DaysaveItemNevertellmetheoddWhereInput;
}

export interface DaysaveItemNewsWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemNewsWhereInput[] | DaysaveItemNewsWhereInput;
}

export interface DaysaveItemNflWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemNflWhereInput[] | DaysaveItemNflWhereInput;
}

export interface DaysaveItemNiceguyWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemNiceguyWhereInput[] | DaysaveItemNiceguyWhereInput;
}

export interface DaysaveItemNintendoSwitchWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemNintendoSwitchWhereInput[]
    | DaysaveItemNintendoSwitchWhereInput;
}

export interface DaysaveItemNosleepWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemNosleepWhereInput[] | DaysaveItemNosleepWhereInput;
}

export interface DaysaveItemNoStupidQuestionWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemNoStupidQuestionWhereInput[]
    | DaysaveItemNoStupidQuestionWhereInput;
}

export interface DaysaveItemNottheonionWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemNottheonionWhereInput[] | DaysaveItemNottheonionWhereInput;
}

export interface DaysaveItemOddlysatisfyingWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemOddlysatisfyingWhereInput[]
    | DaysaveItemOddlysatisfyingWhereInput;
}

export interface DaysaveItemOldSchoolCoolWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemOldSchoolCoolWhereInput[]
    | DaysaveItemOldSchoolCoolWhereInput;
}

export interface DaysaveItemOverwatchWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemOverwatchWhereInput[] | DaysaveItemOverwatchWhereInput;
}

export interface DaysaveItemPcgamingWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemPcgamingWhereInput[] | DaysaveItemPcgamingWhereInput;
}

export interface DaysaveItemPcmasterraceWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemPcmasterraceWhereInput[] | DaysaveItemPcmasterraceWhereInput;
}

export interface DaysaveItemPersonalfinanceWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemPersonalfinanceWhereInput[]
    | DaysaveItemPersonalfinanceWhereInput;
}

export interface DaysaveItemPewdiepieSubmissionWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemPewdiepieSubmissionWhereInput[]
    | DaysaveItemPewdiepieSubmissionWhereInput;
}

export interface DaysaveItemPhotographyWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemPhotographyWhereInput[] | DaysaveItemPhotographyWhereInput;
}

export interface DaysaveItemPicWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemPicWhereInput[] | DaysaveItemPicWhereInput;
}

export interface DaysaveItemPokemonWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemPokemonWhereInput[] | DaysaveItemPokemonWhereInput;
}

export interface DaysaveItemPoliticWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemPoliticWhereInput[] | DaysaveItemPoliticWhereInput;
}

export interface DaysaveItemPrequelMemeWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemPrequelMemeWhereInput[] | DaysaveItemPrequelMemeWhereInput;
}

export interface DaysaveItemPS4WhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemPS4WhereInput[] | DaysaveItemPS4WhereInput;
}

export interface DaysaveItemReactiongifWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemReactiongifWhereInput[] | DaysaveItemReactiongifWhereInput;
}

export interface DaysaveItemRelationship_adviceWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemRelationship_adviceWhereInput[]
    | DaysaveItemRelationship_adviceWhereInput;
}

export interface DaysaveItemRelationshipWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemRelationshipWhereInput[] | DaysaveItemRelationshipWhereInput;
}

export interface DaysaveItemRickandmortyWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemRickandmortyWhereInput[] | DaysaveItemRickandmortyWhereInput;
}

export interface DaysaveItemRoadcamWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemRoadcamWhereInput[] | DaysaveItemRoadcamWhereInput;
}

export interface DaysaveItemRoastMeWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemRoastMeWhereInput[] | DaysaveItemRoastMeWhereInput;
}

export interface DaysaveItemScienceWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemScienceWhereInput[] | DaysaveItemScienceWhereInput;
}

export interface DaysaveItemSexWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemSexWhereInput[] | DaysaveItemSexWhereInput;
}

export interface DaysaveItemShittyfoodpornWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemShittyfoodpornWhereInput[]
    | DaysaveItemShittyfoodpornWhereInput;
}

export interface DaysaveItemShowerthoughtWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemShowerthoughtWhereInput[]
    | DaysaveItemShowerthoughtWhereInput;
}

export interface DaysaveItemSkincareAddictionWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemSkincareAddictionWhereInput[]
    | DaysaveItemSkincareAddictionWhereInput;
}

export interface DaysaveItemSlowcookingWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemSlowcookingWhereInput[] | DaysaveItemSlowcookingWhereInput;
}

export interface DaysaveItemSpaceWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemSpaceWhereInput[] | DaysaveItemSpaceWhereInput;
}

export interface DaysaveItemSportWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemSportWhereInput[] | DaysaveItemSportWhereInput;
}

export interface DaysaveItemStarterpackWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemStarterpackWhereInput[] | DaysaveItemStarterpackWhereInput;
}

export interface DaysaveItemStarWarWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemStarWarWhereInput[] | DaysaveItemStarWarWhereInput;
}

export interface DaysaveItemStreetwearWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemStreetwearWhereInput[] | DaysaveItemStreetwearWhereInput;
}

export interface DaysaveItemTattooWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemTattooWhereInput[] | DaysaveItemTattooWhereInput;
}

export interface DaysaveItemTeenagerWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemTeenagerWhereInput[] | DaysaveItemTeenagerWhereInput;
}

export interface DaysaveItemTelevisionWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemTelevisionWhereInput[] | DaysaveItemTelevisionWhereInput;
}

export interface DaysaveItemThatHappenedWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemThatHappenedWhereInput[] | DaysaveItemThatHappenedWhereInput;
}

export interface DaysaveItemThe_DonaldWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemThe_DonaldWhereInput[] | DaysaveItemThe_DonaldWhereInput;
}

export interface DaysaveItemTherewasanattemptWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemTherewasanattemptWhereInput[]
    | DaysaveItemTherewasanattemptWhereInput;
}

export interface DaysaveItemTinderWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemTinderWhereInput[] | DaysaveItemTinderWhereInput;
}

export interface DaysaveItemTodayilearnedWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemTodayilearnedWhereInput[]
    | DaysaveItemTodayilearnedWhereInput;
}

export interface DaysaveItemTrashyWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemTrashyWhereInput[] | DaysaveItemTrashyWhereInput;
}

export interface DaysaveItemTravelWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemTravelWhereInput[] | DaysaveItemTravelWhereInput;
}

export interface DaysaveItemTreeWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemTreeWhereInput[] | DaysaveItemTreeWhereInput;
}

export interface DaysaveItemTwoXChromosomeWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemTwoXChromosomeWhereInput[]
    | DaysaveItemTwoXChromosomeWhereInput;
}

export interface DaysaveItemUnexpectedWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemUnexpectedWhereInput[] | DaysaveItemUnexpectedWhereInput;
}

export interface DaysaveItemVideoWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemVideoWhereInput[] | DaysaveItemVideoWhereInput;
}

export interface DaysaveItemWatchPeopleDieInsideWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemWatchPeopleDieInsideWhereInput[]
    | DaysaveItemWatchPeopleDieInsideWhereInput;
}

export interface DaysaveItemWellthatsuckWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemWellthatsuckWhereInput[] | DaysaveItemWellthatsuckWhereInput;
}

export interface DaysaveItemWhatcouldgowrongWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemWhatcouldgowrongWhereInput[]
    | DaysaveItemWhatcouldgowrongWhereInput;
}

export interface DaysaveItemWhitePeopleTwitterWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemWhitePeopleTwitterWhereInput[]
    | DaysaveItemWhitePeopleTwitterWhereInput;
}

export interface DaysaveItemWholesomememeWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemWholesomememeWhereInput[]
    | DaysaveItemWholesomememeWhereInput;
}

export interface DaysaveItemWoodworkingWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemWoodworkingWhereInput[] | DaysaveItemWoodworkingWhereInput;
}

export interface DaysaveItemWorldnewWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemWorldnewWhereInput[] | DaysaveItemWorldnewWhereInput;
}

export interface DaysaveItemWritingPromptWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemWritingPromptWhereInput[]
    | DaysaveItemWritingPromptWhereInput;
}

export interface DaysaveItemWTFWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemWTFWhereInput[] | DaysaveItemWTFWhereInput;
}

export interface DaysaveItemXboxoneWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?: DaysaveItemXboxoneWhereInput[] | DaysaveItemXboxoneWhereInput;
}

export interface DaysaveItemYouShouldKnowWhereInput {
  com?: Int;
  com_not?: Int;
  com_in?: Int[] | Int;
  com_not_in?: Int[] | Int;
  com_lt?: Int;
  com_lte?: Int;
  com_gt?: Int;
  com_gte?: Int;
  found?: Int;
  found_not?: Int;
  found_in?: Int[] | Int;
  found_not_in?: Int[] | Int;
  found_lt?: Int;
  found_lte?: Int;
  found_gt?: Int;
  found_gte?: Int;
  AND?:
    | DaysaveItemYouShouldKnowWhereInput[]
    | DaysaveItemYouShouldKnowWhereInput;
}

export interface DaysaveCreateInput {
  __v?: Int;
  createdAt?: DateTimeInput;
  items?: DaysaveItemCreateOneInput;
  updatedAt?: DateTimeInput;
}

export interface DaysaveItemCreateOneInput {
  create?: DaysaveItemCreateInput;
}

export interface DaysaveItemCreateInput {
  AdviceAnimals?: DaysaveItemAdviceAnimalCreateOneInput;
  Android?: DaysaveItemAndroidCreateOneInput;
  AnimalsBeingDerps?: DaysaveItemAnimalsBeingDerpCreateOneInput;
  AnimalsBeingJerks?: DaysaveItemAnimalsBeingJerkCreateOneInput;
  anime?: DaysaveItemAnimeCreateOneInput;
  apple?: DaysaveItemAppleCreateOneInput;
  AskMen?: DaysaveItemAskManCreateOneInput;
  AskReddit?: DaysaveItemAskRedditCreateOneInput;
  askscience?: DaysaveItemAskscienceCreateOneInput;
  AskWomen?: DaysaveItemAskWomanCreateOneInput;
  assholedesign?: DaysaveItemAssholedesignCreateOneInput;
  aww?: DaysaveItemAwwCreateOneInput;
  baseball?: DaysaveItemBaseballCreateOneInput;
  BlackPeopleTwitter?: DaysaveItemBlackPeopleTwitterCreateOneInput;
  boardgames?: DaysaveItemBoardgameCreateOneInput;
  buildapc?: DaysaveItemBuildapcCreateOneInput;
  cars?: DaysaveItemCarCreateOneInput;
  cats?: DaysaveItemCatCreateOneInput;
  ChoosingBeggars?: DaysaveItemChoosingBeggarCreateOneInput;
  comics?: DaysaveItemComicCreateOneInput;
  conspiracy?: DaysaveItemConspiracyCreateOneInput;
  Cooking?: DaysaveItemCookingCreateOneInput;
  CrappyDesign?: DaysaveItemCrappyDesignCreateOneInput;
  dankmemes?: DaysaveItemDankmemeCreateOneInput;
  DestinyTheGame?: DaysaveItemDestinyTheGameCreateOneInput;
  DnD?: DaysaveItemDnDCreateOneInput;
  Documentaries?: DaysaveItemDocumentaryCreateOneInput;
  dogs?: DaysaveItemDogCreateOneInput;
  drawing?: DaysaveItemDrawingCreateOneInput;
  DunderMifflin?: DaysaveItemDunderMifflinCreateOneInput;
  EarthPorn?: DaysaveItemEarthPornCreateOneInput;
  europe?: DaysaveItemEuropeCreateOneInput;
  explainlikeimfive?: DaysaveItemExplainlikeimfiveCreateOneInput;
  Eyebleach?: DaysaveItemEyebleachCreateOneInput;
  Fitness?: DaysaveItemFitnessCreateOneInput;
  food?: DaysaveItemFoodCreateOneInput;
  FoodPorn?: DaysaveItemFoodPornCreateOneInput;
  FortNiteBR?: DaysaveItemFortNiteBRCreateOneInput;
  Frugal?: DaysaveItemFrugalCreateOneInput;
  funny?: DaysaveItemFunnyCreateOneInput;
  Futurology?: DaysaveItemFuturologyCreateOneInput;
  gadgets?: DaysaveItemGadgetCreateOneInput;
  Games?: DaysaveItemGameCreateOneInput;
  gaming?: DaysaveItemGamingCreateOneInput;
  gardening?: DaysaveItemGardeningCreateOneInput;
  gifs?: DaysaveItemGifCreateOneInput;
  gonewild?: DaysaveItemGonewildCreateOneInput;
  hiphopheads?: DaysaveItemHiphopheadCreateOneInput;
  hockey?: DaysaveItemHockeyCreateOneInput;
  iamverysmart?: DaysaveItemIamverysmartCreateOneInput;
  instant_regret?: DaysaveItemInstant_regretCreateOneInput;
  interestingasfuck?: DaysaveItemInterestingasfuckCreateOneInput;
  Jokes?: DaysaveItemJokeCreateOneInput;
  leagueoflegends?: DaysaveItemLeagueoflegendCreateOneInput;
  legaladvice?: DaysaveItemLegaladviceCreateOneInput;
  LifeProTips?: DaysaveItemLifeProTipCreateOneInput;
  listentothis?: DaysaveItemListentothiCreateOneInput;
  MadeMeSmile?: DaysaveItemMadeMeSmileCreateOneInput;
  me_irl?: DaysaveItemMe_irlCreateOneInput;
  MemeEconomy?: DaysaveItemMemeEconomyCreateOneInput;
  memes?: DaysaveItemMemeCreateOneInput;
  mildlyinfuriating?: DaysaveItemMildlyinfuriatingCreateOneInput;
  mildlyinteresting?: DaysaveItemMildlyinterestingCreateOneInput;
  Minecraft?: DaysaveItemMinecraftCreateOneInput;
  MMA?: DaysaveItemMMACreateOneInput;
  MovieDetails?: DaysaveItemMovieDetailCreateOneInput;
  movies?: DaysaveItemMovieCreateOneInput;
  MurderedByWords?: DaysaveItemMurderedByWordCreateOneInput;
  natureismetal?: DaysaveItemNatureismetalCreateOneInput;
  nba?: DaysaveItemNbaCreateOneInput;
  nevertellmetheodds?: DaysaveItemNevertellmetheoddCreateOneInput;
  news?: DaysaveItemNewsCreateOneInput;
  nfl?: DaysaveItemNflCreateOneInput;
  niceguys?: DaysaveItemNiceguyCreateOneInput;
  NintendoSwitch?: DaysaveItemNintendoSwitchCreateOneInput;
  nosleep?: DaysaveItemNosleepCreateOneInput;
  NoStupidQuestions?: DaysaveItemNoStupidQuestionCreateOneInput;
  nottheonion?: DaysaveItemNottheonionCreateOneInput;
  oddlysatisfying?: DaysaveItemOddlysatisfyingCreateOneInput;
  OldSchoolCool?: DaysaveItemOldSchoolCoolCreateOneInput;
  Overwatch?: DaysaveItemOverwatchCreateOneInput;
  pcgaming?: DaysaveItemPcgamingCreateOneInput;
  pcmasterrace?: DaysaveItemPcmasterraceCreateOneInput;
  personalfinance?: DaysaveItemPersonalfinanceCreateOneInput;
  PewdiepieSubmissions?: DaysaveItemPewdiepieSubmissionCreateOneInput;
  photography?: DaysaveItemPhotographyCreateOneInput;
  pics?: DaysaveItemPicCreateOneInput;
  pokemon?: DaysaveItemPokemonCreateOneInput;
  politics?: DaysaveItemPoliticCreateOneInput;
  PrequelMemes?: DaysaveItemPrequelMemeCreateOneInput;
  PS4?: DaysaveItemPS4CreateOneInput;
  reactiongifs?: DaysaveItemReactiongifCreateOneInput;
  relationship_advice?: DaysaveItemRelationship_adviceCreateOneInput;
  relationships?: DaysaveItemRelationshipCreateOneInput;
  rickandmorty?: DaysaveItemRickandmortyCreateOneInput;
  Roadcam?: DaysaveItemRoadcamCreateOneInput;
  RoastMe?: DaysaveItemRoastMeCreateOneInput;
  science?: DaysaveItemScienceCreateOneInput;
  sex?: DaysaveItemSexCreateOneInput;
  shittyfoodporn?: DaysaveItemShittyfoodpornCreateOneInput;
  Showerthoughts?: DaysaveItemShowerthoughtCreateOneInput;
  SkincareAddiction?: DaysaveItemSkincareAddictionCreateOneInput;
  slowcooking?: DaysaveItemSlowcookingCreateOneInput;
  space?: DaysaveItemSpaceCreateOneInput;
  sports?: DaysaveItemSportCreateOneInput;
  starterpacks?: DaysaveItemStarterpackCreateOneInput;
  StarWars?: DaysaveItemStarWarCreateOneInput;
  streetwear?: DaysaveItemStreetwearCreateOneInput;
  tattoos?: DaysaveItemTattooCreateOneInput;
  teenagers?: DaysaveItemTeenagerCreateOneInput;
  television?: DaysaveItemTelevisionCreateOneInput;
  thatHappened?: DaysaveItemThatHappenedCreateOneInput;
  The_Donald?: DaysaveItemThe_DonaldCreateOneInput;
  therewasanattempt?: DaysaveItemTherewasanattemptCreateOneInput;
  Tinder?: DaysaveItemTinderCreateOneInput;
  todayilearned?: DaysaveItemTodayilearnedCreateOneInput;
  trashy?: DaysaveItemTrashyCreateOneInput;
  travel?: DaysaveItemTravelCreateOneInput;
  trees?: DaysaveItemTreeCreateOneInput;
  TwoXChromosomes?: DaysaveItemTwoXChromosomeCreateOneInput;
  Unexpected?: DaysaveItemUnexpectedCreateOneInput;
  videos?: DaysaveItemVideoCreateOneInput;
  WatchPeopleDieInside?: DaysaveItemWatchPeopleDieInsideCreateOneInput;
  Wellthatsucks?: DaysaveItemWellthatsuckCreateOneInput;
  Whatcouldgowrong?: DaysaveItemWhatcouldgowrongCreateOneInput;
  WhitePeopleTwitter?: DaysaveItemWhitePeopleTwitterCreateOneInput;
  wholesomememes?: DaysaveItemWholesomememeCreateOneInput;
  woodworking?: DaysaveItemWoodworkingCreateOneInput;
  worldnews?: DaysaveItemWorldnewCreateOneInput;
  WritingPrompts?: DaysaveItemWritingPromptCreateOneInput;
  WTF?: DaysaveItemWTFCreateOneInput;
  xboxone?: DaysaveItemXboxoneCreateOneInput;
  YouShouldKnow?: DaysaveItemYouShouldKnowCreateOneInput;
}

export interface DaysaveItemAdviceAnimalCreateOneInput {
  create?: DaysaveItemAdviceAnimalCreateInput;
}

export interface DaysaveItemAdviceAnimalCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAndroidCreateOneInput {
  create?: DaysaveItemAndroidCreateInput;
}

export interface DaysaveItemAndroidCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAnimalsBeingDerpCreateOneInput {
  create?: DaysaveItemAnimalsBeingDerpCreateInput;
}

export interface DaysaveItemAnimalsBeingDerpCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAnimalsBeingJerkCreateOneInput {
  create?: DaysaveItemAnimalsBeingJerkCreateInput;
}

export interface DaysaveItemAnimalsBeingJerkCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAnimeCreateOneInput {
  create?: DaysaveItemAnimeCreateInput;
}

export interface DaysaveItemAnimeCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAppleCreateOneInput {
  create?: DaysaveItemAppleCreateInput;
}

export interface DaysaveItemAppleCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAskManCreateOneInput {
  create?: DaysaveItemAskManCreateInput;
}

export interface DaysaveItemAskManCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAskRedditCreateOneInput {
  create?: DaysaveItemAskRedditCreateInput;
}

export interface DaysaveItemAskRedditCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAskscienceCreateOneInput {
  create?: DaysaveItemAskscienceCreateInput;
}

export interface DaysaveItemAskscienceCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAskWomanCreateOneInput {
  create?: DaysaveItemAskWomanCreateInput;
}

export interface DaysaveItemAskWomanCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAssholedesignCreateOneInput {
  create?: DaysaveItemAssholedesignCreateInput;
}

export interface DaysaveItemAssholedesignCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAwwCreateOneInput {
  create?: DaysaveItemAwwCreateInput;
}

export interface DaysaveItemAwwCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBaseballCreateOneInput {
  create?: DaysaveItemBaseballCreateInput;
}

export interface DaysaveItemBaseballCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBlackPeopleTwitterCreateOneInput {
  create?: DaysaveItemBlackPeopleTwitterCreateInput;
}

export interface DaysaveItemBlackPeopleTwitterCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBoardgameCreateOneInput {
  create?: DaysaveItemBoardgameCreateInput;
}

export interface DaysaveItemBoardgameCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBuildapcCreateOneInput {
  create?: DaysaveItemBuildapcCreateInput;
}

export interface DaysaveItemBuildapcCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCarCreateOneInput {
  create?: DaysaveItemCarCreateInput;
}

export interface DaysaveItemCarCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCatCreateOneInput {
  create?: DaysaveItemCatCreateInput;
}

export interface DaysaveItemCatCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemChoosingBeggarCreateOneInput {
  create?: DaysaveItemChoosingBeggarCreateInput;
}

export interface DaysaveItemChoosingBeggarCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemComicCreateOneInput {
  create?: DaysaveItemComicCreateInput;
}

export interface DaysaveItemComicCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemConspiracyCreateOneInput {
  create?: DaysaveItemConspiracyCreateInput;
}

export interface DaysaveItemConspiracyCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCookingCreateOneInput {
  create?: DaysaveItemCookingCreateInput;
}

export interface DaysaveItemCookingCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCrappyDesignCreateOneInput {
  create?: DaysaveItemCrappyDesignCreateInput;
}

export interface DaysaveItemCrappyDesignCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDankmemeCreateOneInput {
  create?: DaysaveItemDankmemeCreateInput;
}

export interface DaysaveItemDankmemeCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDestinyTheGameCreateOneInput {
  create?: DaysaveItemDestinyTheGameCreateInput;
}

export interface DaysaveItemDestinyTheGameCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDnDCreateOneInput {
  create?: DaysaveItemDnDCreateInput;
}

export interface DaysaveItemDnDCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDocumentaryCreateOneInput {
  create?: DaysaveItemDocumentaryCreateInput;
}

export interface DaysaveItemDocumentaryCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDogCreateOneInput {
  create?: DaysaveItemDogCreateInput;
}

export interface DaysaveItemDogCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDrawingCreateOneInput {
  create?: DaysaveItemDrawingCreateInput;
}

export interface DaysaveItemDrawingCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDunderMifflinCreateOneInput {
  create?: DaysaveItemDunderMifflinCreateInput;
}

export interface DaysaveItemDunderMifflinCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemEarthPornCreateOneInput {
  create?: DaysaveItemEarthPornCreateInput;
}

export interface DaysaveItemEarthPornCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemEuropeCreateOneInput {
  create?: DaysaveItemEuropeCreateInput;
}

export interface DaysaveItemEuropeCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemExplainlikeimfiveCreateOneInput {
  create?: DaysaveItemExplainlikeimfiveCreateInput;
}

export interface DaysaveItemExplainlikeimfiveCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemEyebleachCreateOneInput {
  create?: DaysaveItemEyebleachCreateInput;
}

export interface DaysaveItemEyebleachCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFitnessCreateOneInput {
  create?: DaysaveItemFitnessCreateInput;
}

export interface DaysaveItemFitnessCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFoodCreateOneInput {
  create?: DaysaveItemFoodCreateInput;
}

export interface DaysaveItemFoodCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFoodPornCreateOneInput {
  create?: DaysaveItemFoodPornCreateInput;
}

export interface DaysaveItemFoodPornCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFortNiteBRCreateOneInput {
  create?: DaysaveItemFortNiteBRCreateInput;
}

export interface DaysaveItemFortNiteBRCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFrugalCreateOneInput {
  create?: DaysaveItemFrugalCreateInput;
}

export interface DaysaveItemFrugalCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFunnyCreateOneInput {
  create?: DaysaveItemFunnyCreateInput;
}

export interface DaysaveItemFunnyCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFuturologyCreateOneInput {
  create?: DaysaveItemFuturologyCreateInput;
}

export interface DaysaveItemFuturologyCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGadgetCreateOneInput {
  create?: DaysaveItemGadgetCreateInput;
}

export interface DaysaveItemGadgetCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGameCreateOneInput {
  create?: DaysaveItemGameCreateInput;
}

export interface DaysaveItemGameCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGamingCreateOneInput {
  create?: DaysaveItemGamingCreateInput;
}

export interface DaysaveItemGamingCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGardeningCreateOneInput {
  create?: DaysaveItemGardeningCreateInput;
}

export interface DaysaveItemGardeningCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGifCreateOneInput {
  create?: DaysaveItemGifCreateInput;
}

export interface DaysaveItemGifCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGonewildCreateOneInput {
  create?: DaysaveItemGonewildCreateInput;
}

export interface DaysaveItemGonewildCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemHiphopheadCreateOneInput {
  create?: DaysaveItemHiphopheadCreateInput;
}

export interface DaysaveItemHiphopheadCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemHockeyCreateOneInput {
  create?: DaysaveItemHockeyCreateInput;
}

export interface DaysaveItemHockeyCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemIamverysmartCreateOneInput {
  create?: DaysaveItemIamverysmartCreateInput;
}

export interface DaysaveItemIamverysmartCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemInstant_regretCreateOneInput {
  create?: DaysaveItemInstant_regretCreateInput;
}

export interface DaysaveItemInstant_regretCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemInterestingasfuckCreateOneInput {
  create?: DaysaveItemInterestingasfuckCreateInput;
}

export interface DaysaveItemInterestingasfuckCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemJokeCreateOneInput {
  create?: DaysaveItemJokeCreateInput;
}

export interface DaysaveItemJokeCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemLeagueoflegendCreateOneInput {
  create?: DaysaveItemLeagueoflegendCreateInput;
}

export interface DaysaveItemLeagueoflegendCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemLegaladviceCreateOneInput {
  create?: DaysaveItemLegaladviceCreateInput;
}

export interface DaysaveItemLegaladviceCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemLifeProTipCreateOneInput {
  create?: DaysaveItemLifeProTipCreateInput;
}

export interface DaysaveItemLifeProTipCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemListentothiCreateOneInput {
  create?: DaysaveItemListentothiCreateInput;
}

export interface DaysaveItemListentothiCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMadeMeSmileCreateOneInput {
  create?: DaysaveItemMadeMeSmileCreateInput;
}

export interface DaysaveItemMadeMeSmileCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMe_irlCreateOneInput {
  create?: DaysaveItemMe_irlCreateInput;
}

export interface DaysaveItemMe_irlCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMemeEconomyCreateOneInput {
  create?: DaysaveItemMemeEconomyCreateInput;
}

export interface DaysaveItemMemeEconomyCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMemeCreateOneInput {
  create?: DaysaveItemMemeCreateInput;
}

export interface DaysaveItemMemeCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMildlyinfuriatingCreateOneInput {
  create?: DaysaveItemMildlyinfuriatingCreateInput;
}

export interface DaysaveItemMildlyinfuriatingCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMildlyinterestingCreateOneInput {
  create?: DaysaveItemMildlyinterestingCreateInput;
}

export interface DaysaveItemMildlyinterestingCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMinecraftCreateOneInput {
  create?: DaysaveItemMinecraftCreateInput;
}

export interface DaysaveItemMinecraftCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMMACreateOneInput {
  create?: DaysaveItemMMACreateInput;
}

export interface DaysaveItemMMACreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMovieDetailCreateOneInput {
  create?: DaysaveItemMovieDetailCreateInput;
}

export interface DaysaveItemMovieDetailCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMovieCreateOneInput {
  create?: DaysaveItemMovieCreateInput;
}

export interface DaysaveItemMovieCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMurderedByWordCreateOneInput {
  create?: DaysaveItemMurderedByWordCreateInput;
}

export interface DaysaveItemMurderedByWordCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNatureismetalCreateOneInput {
  create?: DaysaveItemNatureismetalCreateInput;
}

export interface DaysaveItemNatureismetalCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNbaCreateOneInput {
  create?: DaysaveItemNbaCreateInput;
}

export interface DaysaveItemNbaCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNevertellmetheoddCreateOneInput {
  create?: DaysaveItemNevertellmetheoddCreateInput;
}

export interface DaysaveItemNevertellmetheoddCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNewsCreateOneInput {
  create?: DaysaveItemNewsCreateInput;
}

export interface DaysaveItemNewsCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNflCreateOneInput {
  create?: DaysaveItemNflCreateInput;
}

export interface DaysaveItemNflCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNiceguyCreateOneInput {
  create?: DaysaveItemNiceguyCreateInput;
}

export interface DaysaveItemNiceguyCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNintendoSwitchCreateOneInput {
  create?: DaysaveItemNintendoSwitchCreateInput;
}

export interface DaysaveItemNintendoSwitchCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNosleepCreateOneInput {
  create?: DaysaveItemNosleepCreateInput;
}

export interface DaysaveItemNosleepCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNoStupidQuestionCreateOneInput {
  create?: DaysaveItemNoStupidQuestionCreateInput;
}

export interface DaysaveItemNoStupidQuestionCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNottheonionCreateOneInput {
  create?: DaysaveItemNottheonionCreateInput;
}

export interface DaysaveItemNottheonionCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemOddlysatisfyingCreateOneInput {
  create?: DaysaveItemOddlysatisfyingCreateInput;
}

export interface DaysaveItemOddlysatisfyingCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemOldSchoolCoolCreateOneInput {
  create?: DaysaveItemOldSchoolCoolCreateInput;
}

export interface DaysaveItemOldSchoolCoolCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemOverwatchCreateOneInput {
  create?: DaysaveItemOverwatchCreateInput;
}

export interface DaysaveItemOverwatchCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPcgamingCreateOneInput {
  create?: DaysaveItemPcgamingCreateInput;
}

export interface DaysaveItemPcgamingCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPcmasterraceCreateOneInput {
  create?: DaysaveItemPcmasterraceCreateInput;
}

export interface DaysaveItemPcmasterraceCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPersonalfinanceCreateOneInput {
  create?: DaysaveItemPersonalfinanceCreateInput;
}

export interface DaysaveItemPersonalfinanceCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPewdiepieSubmissionCreateOneInput {
  create?: DaysaveItemPewdiepieSubmissionCreateInput;
}

export interface DaysaveItemPewdiepieSubmissionCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPhotographyCreateOneInput {
  create?: DaysaveItemPhotographyCreateInput;
}

export interface DaysaveItemPhotographyCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPicCreateOneInput {
  create?: DaysaveItemPicCreateInput;
}

export interface DaysaveItemPicCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPokemonCreateOneInput {
  create?: DaysaveItemPokemonCreateInput;
}

export interface DaysaveItemPokemonCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPoliticCreateOneInput {
  create?: DaysaveItemPoliticCreateInput;
}

export interface DaysaveItemPoliticCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPrequelMemeCreateOneInput {
  create?: DaysaveItemPrequelMemeCreateInput;
}

export interface DaysaveItemPrequelMemeCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPS4CreateOneInput {
  create?: DaysaveItemPS4CreateInput;
}

export interface DaysaveItemPS4CreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemReactiongifCreateOneInput {
  create?: DaysaveItemReactiongifCreateInput;
}

export interface DaysaveItemReactiongifCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRelationship_adviceCreateOneInput {
  create?: DaysaveItemRelationship_adviceCreateInput;
}

export interface DaysaveItemRelationship_adviceCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRelationshipCreateOneInput {
  create?: DaysaveItemRelationshipCreateInput;
}

export interface DaysaveItemRelationshipCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRickandmortyCreateOneInput {
  create?: DaysaveItemRickandmortyCreateInput;
}

export interface DaysaveItemRickandmortyCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRoadcamCreateOneInput {
  create?: DaysaveItemRoadcamCreateInput;
}

export interface DaysaveItemRoadcamCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRoastMeCreateOneInput {
  create?: DaysaveItemRoastMeCreateInput;
}

export interface DaysaveItemRoastMeCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemScienceCreateOneInput {
  create?: DaysaveItemScienceCreateInput;
}

export interface DaysaveItemScienceCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSexCreateOneInput {
  create?: DaysaveItemSexCreateInput;
}

export interface DaysaveItemSexCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemShittyfoodpornCreateOneInput {
  create?: DaysaveItemShittyfoodpornCreateInput;
}

export interface DaysaveItemShittyfoodpornCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemShowerthoughtCreateOneInput {
  create?: DaysaveItemShowerthoughtCreateInput;
}

export interface DaysaveItemShowerthoughtCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSkincareAddictionCreateOneInput {
  create?: DaysaveItemSkincareAddictionCreateInput;
}

export interface DaysaveItemSkincareAddictionCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSlowcookingCreateOneInput {
  create?: DaysaveItemSlowcookingCreateInput;
}

export interface DaysaveItemSlowcookingCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSpaceCreateOneInput {
  create?: DaysaveItemSpaceCreateInput;
}

export interface DaysaveItemSpaceCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSportCreateOneInput {
  create?: DaysaveItemSportCreateInput;
}

export interface DaysaveItemSportCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemStarterpackCreateOneInput {
  create?: DaysaveItemStarterpackCreateInput;
}

export interface DaysaveItemStarterpackCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemStarWarCreateOneInput {
  create?: DaysaveItemStarWarCreateInput;
}

export interface DaysaveItemStarWarCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemStreetwearCreateOneInput {
  create?: DaysaveItemStreetwearCreateInput;
}

export interface DaysaveItemStreetwearCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTattooCreateOneInput {
  create?: DaysaveItemTattooCreateInput;
}

export interface DaysaveItemTattooCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTeenagerCreateOneInput {
  create?: DaysaveItemTeenagerCreateInput;
}

export interface DaysaveItemTeenagerCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTelevisionCreateOneInput {
  create?: DaysaveItemTelevisionCreateInput;
}

export interface DaysaveItemTelevisionCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemThatHappenedCreateOneInput {
  create?: DaysaveItemThatHappenedCreateInput;
}

export interface DaysaveItemThatHappenedCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemThe_DonaldCreateOneInput {
  create?: DaysaveItemThe_DonaldCreateInput;
}

export interface DaysaveItemThe_DonaldCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTherewasanattemptCreateOneInput {
  create?: DaysaveItemTherewasanattemptCreateInput;
}

export interface DaysaveItemTherewasanattemptCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTinderCreateOneInput {
  create?: DaysaveItemTinderCreateInput;
}

export interface DaysaveItemTinderCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTodayilearnedCreateOneInput {
  create?: DaysaveItemTodayilearnedCreateInput;
}

export interface DaysaveItemTodayilearnedCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTrashyCreateOneInput {
  create?: DaysaveItemTrashyCreateInput;
}

export interface DaysaveItemTrashyCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTravelCreateOneInput {
  create?: DaysaveItemTravelCreateInput;
}

export interface DaysaveItemTravelCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTreeCreateOneInput {
  create?: DaysaveItemTreeCreateInput;
}

export interface DaysaveItemTreeCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTwoXChromosomeCreateOneInput {
  create?: DaysaveItemTwoXChromosomeCreateInput;
}

export interface DaysaveItemTwoXChromosomeCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemUnexpectedCreateOneInput {
  create?: DaysaveItemUnexpectedCreateInput;
}

export interface DaysaveItemUnexpectedCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemVideoCreateOneInput {
  create?: DaysaveItemVideoCreateInput;
}

export interface DaysaveItemVideoCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWatchPeopleDieInsideCreateOneInput {
  create?: DaysaveItemWatchPeopleDieInsideCreateInput;
}

export interface DaysaveItemWatchPeopleDieInsideCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWellthatsuckCreateOneInput {
  create?: DaysaveItemWellthatsuckCreateInput;
}

export interface DaysaveItemWellthatsuckCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWhatcouldgowrongCreateOneInput {
  create?: DaysaveItemWhatcouldgowrongCreateInput;
}

export interface DaysaveItemWhatcouldgowrongCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWhitePeopleTwitterCreateOneInput {
  create?: DaysaveItemWhitePeopleTwitterCreateInput;
}

export interface DaysaveItemWhitePeopleTwitterCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWholesomememeCreateOneInput {
  create?: DaysaveItemWholesomememeCreateInput;
}

export interface DaysaveItemWholesomememeCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWoodworkingCreateOneInput {
  create?: DaysaveItemWoodworkingCreateInput;
}

export interface DaysaveItemWoodworkingCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWorldnewCreateOneInput {
  create?: DaysaveItemWorldnewCreateInput;
}

export interface DaysaveItemWorldnewCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWritingPromptCreateOneInput {
  create?: DaysaveItemWritingPromptCreateInput;
}

export interface DaysaveItemWritingPromptCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWTFCreateOneInput {
  create?: DaysaveItemWTFCreateInput;
}

export interface DaysaveItemWTFCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemXboxoneCreateOneInput {
  create?: DaysaveItemXboxoneCreateInput;
}

export interface DaysaveItemXboxoneCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemYouShouldKnowCreateOneInput {
  create?: DaysaveItemYouShouldKnowCreateInput;
}

export interface DaysaveItemYouShouldKnowCreateInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveUpdateInput {
  __v?: Int;
  createdAt?: DateTimeInput;
  items?: DaysaveItemUpdateOneInput;
  updatedAt?: DateTimeInput;
}

export interface DaysaveItemUpdateOneInput {
  create?: DaysaveItemCreateInput;
  update?: DaysaveItemUpdateDataInput;
  upsert?: DaysaveItemUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemUpdateDataInput {
  AdviceAnimals?: DaysaveItemAdviceAnimalUpdateOneInput;
  Android?: DaysaveItemAndroidUpdateOneInput;
  AnimalsBeingDerps?: DaysaveItemAnimalsBeingDerpUpdateOneInput;
  AnimalsBeingJerks?: DaysaveItemAnimalsBeingJerkUpdateOneInput;
  anime?: DaysaveItemAnimeUpdateOneInput;
  apple?: DaysaveItemAppleUpdateOneInput;
  AskMen?: DaysaveItemAskManUpdateOneInput;
  AskReddit?: DaysaveItemAskRedditUpdateOneInput;
  askscience?: DaysaveItemAskscienceUpdateOneInput;
  AskWomen?: DaysaveItemAskWomanUpdateOneInput;
  assholedesign?: DaysaveItemAssholedesignUpdateOneInput;
  aww?: DaysaveItemAwwUpdateOneInput;
  baseball?: DaysaveItemBaseballUpdateOneInput;
  BlackPeopleTwitter?: DaysaveItemBlackPeopleTwitterUpdateOneInput;
  boardgames?: DaysaveItemBoardgameUpdateOneInput;
  buildapc?: DaysaveItemBuildapcUpdateOneInput;
  cars?: DaysaveItemCarUpdateOneInput;
  cats?: DaysaveItemCatUpdateOneInput;
  ChoosingBeggars?: DaysaveItemChoosingBeggarUpdateOneInput;
  comics?: DaysaveItemComicUpdateOneInput;
  conspiracy?: DaysaveItemConspiracyUpdateOneInput;
  Cooking?: DaysaveItemCookingUpdateOneInput;
  CrappyDesign?: DaysaveItemCrappyDesignUpdateOneInput;
  dankmemes?: DaysaveItemDankmemeUpdateOneInput;
  DestinyTheGame?: DaysaveItemDestinyTheGameUpdateOneInput;
  DnD?: DaysaveItemDnDUpdateOneInput;
  Documentaries?: DaysaveItemDocumentaryUpdateOneInput;
  dogs?: DaysaveItemDogUpdateOneInput;
  drawing?: DaysaveItemDrawingUpdateOneInput;
  DunderMifflin?: DaysaveItemDunderMifflinUpdateOneInput;
  EarthPorn?: DaysaveItemEarthPornUpdateOneInput;
  europe?: DaysaveItemEuropeUpdateOneInput;
  explainlikeimfive?: DaysaveItemExplainlikeimfiveUpdateOneInput;
  Eyebleach?: DaysaveItemEyebleachUpdateOneInput;
  Fitness?: DaysaveItemFitnessUpdateOneInput;
  food?: DaysaveItemFoodUpdateOneInput;
  FoodPorn?: DaysaveItemFoodPornUpdateOneInput;
  FortNiteBR?: DaysaveItemFortNiteBRUpdateOneInput;
  Frugal?: DaysaveItemFrugalUpdateOneInput;
  funny?: DaysaveItemFunnyUpdateOneInput;
  Futurology?: DaysaveItemFuturologyUpdateOneInput;
  gadgets?: DaysaveItemGadgetUpdateOneInput;
  Games?: DaysaveItemGameUpdateOneInput;
  gaming?: DaysaveItemGamingUpdateOneInput;
  gardening?: DaysaveItemGardeningUpdateOneInput;
  gifs?: DaysaveItemGifUpdateOneInput;
  gonewild?: DaysaveItemGonewildUpdateOneInput;
  hiphopheads?: DaysaveItemHiphopheadUpdateOneInput;
  hockey?: DaysaveItemHockeyUpdateOneInput;
  iamverysmart?: DaysaveItemIamverysmartUpdateOneInput;
  instant_regret?: DaysaveItemInstant_regretUpdateOneInput;
  interestingasfuck?: DaysaveItemInterestingasfuckUpdateOneInput;
  Jokes?: DaysaveItemJokeUpdateOneInput;
  leagueoflegends?: DaysaveItemLeagueoflegendUpdateOneInput;
  legaladvice?: DaysaveItemLegaladviceUpdateOneInput;
  LifeProTips?: DaysaveItemLifeProTipUpdateOneInput;
  listentothis?: DaysaveItemListentothiUpdateOneInput;
  MadeMeSmile?: DaysaveItemMadeMeSmileUpdateOneInput;
  me_irl?: DaysaveItemMe_irlUpdateOneInput;
  MemeEconomy?: DaysaveItemMemeEconomyUpdateOneInput;
  memes?: DaysaveItemMemeUpdateOneInput;
  mildlyinfuriating?: DaysaveItemMildlyinfuriatingUpdateOneInput;
  mildlyinteresting?: DaysaveItemMildlyinterestingUpdateOneInput;
  Minecraft?: DaysaveItemMinecraftUpdateOneInput;
  MMA?: DaysaveItemMMAUpdateOneInput;
  MovieDetails?: DaysaveItemMovieDetailUpdateOneInput;
  movies?: DaysaveItemMovieUpdateOneInput;
  MurderedByWords?: DaysaveItemMurderedByWordUpdateOneInput;
  natureismetal?: DaysaveItemNatureismetalUpdateOneInput;
  nba?: DaysaveItemNbaUpdateOneInput;
  nevertellmetheodds?: DaysaveItemNevertellmetheoddUpdateOneInput;
  news?: DaysaveItemNewsUpdateOneInput;
  nfl?: DaysaveItemNflUpdateOneInput;
  niceguys?: DaysaveItemNiceguyUpdateOneInput;
  NintendoSwitch?: DaysaveItemNintendoSwitchUpdateOneInput;
  nosleep?: DaysaveItemNosleepUpdateOneInput;
  NoStupidQuestions?: DaysaveItemNoStupidQuestionUpdateOneInput;
  nottheonion?: DaysaveItemNottheonionUpdateOneInput;
  oddlysatisfying?: DaysaveItemOddlysatisfyingUpdateOneInput;
  OldSchoolCool?: DaysaveItemOldSchoolCoolUpdateOneInput;
  Overwatch?: DaysaveItemOverwatchUpdateOneInput;
  pcgaming?: DaysaveItemPcgamingUpdateOneInput;
  pcmasterrace?: DaysaveItemPcmasterraceUpdateOneInput;
  personalfinance?: DaysaveItemPersonalfinanceUpdateOneInput;
  PewdiepieSubmissions?: DaysaveItemPewdiepieSubmissionUpdateOneInput;
  photography?: DaysaveItemPhotographyUpdateOneInput;
  pics?: DaysaveItemPicUpdateOneInput;
  pokemon?: DaysaveItemPokemonUpdateOneInput;
  politics?: DaysaveItemPoliticUpdateOneInput;
  PrequelMemes?: DaysaveItemPrequelMemeUpdateOneInput;
  PS4?: DaysaveItemPS4UpdateOneInput;
  reactiongifs?: DaysaveItemReactiongifUpdateOneInput;
  relationship_advice?: DaysaveItemRelationship_adviceUpdateOneInput;
  relationships?: DaysaveItemRelationshipUpdateOneInput;
  rickandmorty?: DaysaveItemRickandmortyUpdateOneInput;
  Roadcam?: DaysaveItemRoadcamUpdateOneInput;
  RoastMe?: DaysaveItemRoastMeUpdateOneInput;
  science?: DaysaveItemScienceUpdateOneInput;
  sex?: DaysaveItemSexUpdateOneInput;
  shittyfoodporn?: DaysaveItemShittyfoodpornUpdateOneInput;
  Showerthoughts?: DaysaveItemShowerthoughtUpdateOneInput;
  SkincareAddiction?: DaysaveItemSkincareAddictionUpdateOneInput;
  slowcooking?: DaysaveItemSlowcookingUpdateOneInput;
  space?: DaysaveItemSpaceUpdateOneInput;
  sports?: DaysaveItemSportUpdateOneInput;
  starterpacks?: DaysaveItemStarterpackUpdateOneInput;
  StarWars?: DaysaveItemStarWarUpdateOneInput;
  streetwear?: DaysaveItemStreetwearUpdateOneInput;
  tattoos?: DaysaveItemTattooUpdateOneInput;
  teenagers?: DaysaveItemTeenagerUpdateOneInput;
  television?: DaysaveItemTelevisionUpdateOneInput;
  thatHappened?: DaysaveItemThatHappenedUpdateOneInput;
  The_Donald?: DaysaveItemThe_DonaldUpdateOneInput;
  therewasanattempt?: DaysaveItemTherewasanattemptUpdateOneInput;
  Tinder?: DaysaveItemTinderUpdateOneInput;
  todayilearned?: DaysaveItemTodayilearnedUpdateOneInput;
  trashy?: DaysaveItemTrashyUpdateOneInput;
  travel?: DaysaveItemTravelUpdateOneInput;
  trees?: DaysaveItemTreeUpdateOneInput;
  TwoXChromosomes?: DaysaveItemTwoXChromosomeUpdateOneInput;
  Unexpected?: DaysaveItemUnexpectedUpdateOneInput;
  videos?: DaysaveItemVideoUpdateOneInput;
  WatchPeopleDieInside?: DaysaveItemWatchPeopleDieInsideUpdateOneInput;
  Wellthatsucks?: DaysaveItemWellthatsuckUpdateOneInput;
  Whatcouldgowrong?: DaysaveItemWhatcouldgowrongUpdateOneInput;
  WhitePeopleTwitter?: DaysaveItemWhitePeopleTwitterUpdateOneInput;
  wholesomememes?: DaysaveItemWholesomememeUpdateOneInput;
  woodworking?: DaysaveItemWoodworkingUpdateOneInput;
  worldnews?: DaysaveItemWorldnewUpdateOneInput;
  WritingPrompts?: DaysaveItemWritingPromptUpdateOneInput;
  WTF?: DaysaveItemWTFUpdateOneInput;
  xboxone?: DaysaveItemXboxoneUpdateOneInput;
  YouShouldKnow?: DaysaveItemYouShouldKnowUpdateOneInput;
}

export interface DaysaveItemAdviceAnimalUpdateOneInput {
  create?: DaysaveItemAdviceAnimalCreateInput;
  update?: DaysaveItemAdviceAnimalUpdateDataInput;
  upsert?: DaysaveItemAdviceAnimalUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAdviceAnimalUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAdviceAnimalUpsertNestedInput {
  update: DaysaveItemAdviceAnimalUpdateDataInput;
  create: DaysaveItemAdviceAnimalCreateInput;
}

export interface DaysaveItemAndroidUpdateOneInput {
  create?: DaysaveItemAndroidCreateInput;
  update?: DaysaveItemAndroidUpdateDataInput;
  upsert?: DaysaveItemAndroidUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAndroidUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAndroidUpsertNestedInput {
  update: DaysaveItemAndroidUpdateDataInput;
  create: DaysaveItemAndroidCreateInput;
}

export interface DaysaveItemAnimalsBeingDerpUpdateOneInput {
  create?: DaysaveItemAnimalsBeingDerpCreateInput;
  update?: DaysaveItemAnimalsBeingDerpUpdateDataInput;
  upsert?: DaysaveItemAnimalsBeingDerpUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAnimalsBeingDerpUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAnimalsBeingDerpUpsertNestedInput {
  update: DaysaveItemAnimalsBeingDerpUpdateDataInput;
  create: DaysaveItemAnimalsBeingDerpCreateInput;
}

export interface DaysaveItemAnimalsBeingJerkUpdateOneInput {
  create?: DaysaveItemAnimalsBeingJerkCreateInput;
  update?: DaysaveItemAnimalsBeingJerkUpdateDataInput;
  upsert?: DaysaveItemAnimalsBeingJerkUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAnimalsBeingJerkUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAnimalsBeingJerkUpsertNestedInput {
  update: DaysaveItemAnimalsBeingJerkUpdateDataInput;
  create: DaysaveItemAnimalsBeingJerkCreateInput;
}

export interface DaysaveItemAnimeUpdateOneInput {
  create?: DaysaveItemAnimeCreateInput;
  update?: DaysaveItemAnimeUpdateDataInput;
  upsert?: DaysaveItemAnimeUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAnimeUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAnimeUpsertNestedInput {
  update: DaysaveItemAnimeUpdateDataInput;
  create: DaysaveItemAnimeCreateInput;
}

export interface DaysaveItemAppleUpdateOneInput {
  create?: DaysaveItemAppleCreateInput;
  update?: DaysaveItemAppleUpdateDataInput;
  upsert?: DaysaveItemAppleUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAppleUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAppleUpsertNestedInput {
  update: DaysaveItemAppleUpdateDataInput;
  create: DaysaveItemAppleCreateInput;
}

export interface DaysaveItemAskManUpdateOneInput {
  create?: DaysaveItemAskManCreateInput;
  update?: DaysaveItemAskManUpdateDataInput;
  upsert?: DaysaveItemAskManUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAskManUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAskManUpsertNestedInput {
  update: DaysaveItemAskManUpdateDataInput;
  create: DaysaveItemAskManCreateInput;
}

export interface DaysaveItemAskRedditUpdateOneInput {
  create?: DaysaveItemAskRedditCreateInput;
  update?: DaysaveItemAskRedditUpdateDataInput;
  upsert?: DaysaveItemAskRedditUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAskRedditUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAskRedditUpsertNestedInput {
  update: DaysaveItemAskRedditUpdateDataInput;
  create: DaysaveItemAskRedditCreateInput;
}

export interface DaysaveItemAskscienceUpdateOneInput {
  create?: DaysaveItemAskscienceCreateInput;
  update?: DaysaveItemAskscienceUpdateDataInput;
  upsert?: DaysaveItemAskscienceUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAskscienceUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAskscienceUpsertNestedInput {
  update: DaysaveItemAskscienceUpdateDataInput;
  create: DaysaveItemAskscienceCreateInput;
}

export interface DaysaveItemAskWomanUpdateOneInput {
  create?: DaysaveItemAskWomanCreateInput;
  update?: DaysaveItemAskWomanUpdateDataInput;
  upsert?: DaysaveItemAskWomanUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAskWomanUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAskWomanUpsertNestedInput {
  update: DaysaveItemAskWomanUpdateDataInput;
  create: DaysaveItemAskWomanCreateInput;
}

export interface DaysaveItemAssholedesignUpdateOneInput {
  create?: DaysaveItemAssholedesignCreateInput;
  update?: DaysaveItemAssholedesignUpdateDataInput;
  upsert?: DaysaveItemAssholedesignUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAssholedesignUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAssholedesignUpsertNestedInput {
  update: DaysaveItemAssholedesignUpdateDataInput;
  create: DaysaveItemAssholedesignCreateInput;
}

export interface DaysaveItemAwwUpdateOneInput {
  create?: DaysaveItemAwwCreateInput;
  update?: DaysaveItemAwwUpdateDataInput;
  upsert?: DaysaveItemAwwUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemAwwUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAwwUpsertNestedInput {
  update: DaysaveItemAwwUpdateDataInput;
  create: DaysaveItemAwwCreateInput;
}

export interface DaysaveItemBaseballUpdateOneInput {
  create?: DaysaveItemBaseballCreateInput;
  update?: DaysaveItemBaseballUpdateDataInput;
  upsert?: DaysaveItemBaseballUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemBaseballUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBaseballUpsertNestedInput {
  update: DaysaveItemBaseballUpdateDataInput;
  create: DaysaveItemBaseballCreateInput;
}

export interface DaysaveItemBlackPeopleTwitterUpdateOneInput {
  create?: DaysaveItemBlackPeopleTwitterCreateInput;
  update?: DaysaveItemBlackPeopleTwitterUpdateDataInput;
  upsert?: DaysaveItemBlackPeopleTwitterUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemBlackPeopleTwitterUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBlackPeopleTwitterUpsertNestedInput {
  update: DaysaveItemBlackPeopleTwitterUpdateDataInput;
  create: DaysaveItemBlackPeopleTwitterCreateInput;
}

export interface DaysaveItemBoardgameUpdateOneInput {
  create?: DaysaveItemBoardgameCreateInput;
  update?: DaysaveItemBoardgameUpdateDataInput;
  upsert?: DaysaveItemBoardgameUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemBoardgameUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBoardgameUpsertNestedInput {
  update: DaysaveItemBoardgameUpdateDataInput;
  create: DaysaveItemBoardgameCreateInput;
}

export interface DaysaveItemBuildapcUpdateOneInput {
  create?: DaysaveItemBuildapcCreateInput;
  update?: DaysaveItemBuildapcUpdateDataInput;
  upsert?: DaysaveItemBuildapcUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemBuildapcUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBuildapcUpsertNestedInput {
  update: DaysaveItemBuildapcUpdateDataInput;
  create: DaysaveItemBuildapcCreateInput;
}

export interface DaysaveItemCarUpdateOneInput {
  create?: DaysaveItemCarCreateInput;
  update?: DaysaveItemCarUpdateDataInput;
  upsert?: DaysaveItemCarUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemCarUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCarUpsertNestedInput {
  update: DaysaveItemCarUpdateDataInput;
  create: DaysaveItemCarCreateInput;
}

export interface DaysaveItemCatUpdateOneInput {
  create?: DaysaveItemCatCreateInput;
  update?: DaysaveItemCatUpdateDataInput;
  upsert?: DaysaveItemCatUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemCatUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCatUpsertNestedInput {
  update: DaysaveItemCatUpdateDataInput;
  create: DaysaveItemCatCreateInput;
}

export interface DaysaveItemChoosingBeggarUpdateOneInput {
  create?: DaysaveItemChoosingBeggarCreateInput;
  update?: DaysaveItemChoosingBeggarUpdateDataInput;
  upsert?: DaysaveItemChoosingBeggarUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemChoosingBeggarUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemChoosingBeggarUpsertNestedInput {
  update: DaysaveItemChoosingBeggarUpdateDataInput;
  create: DaysaveItemChoosingBeggarCreateInput;
}

export interface DaysaveItemComicUpdateOneInput {
  create?: DaysaveItemComicCreateInput;
  update?: DaysaveItemComicUpdateDataInput;
  upsert?: DaysaveItemComicUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemComicUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemComicUpsertNestedInput {
  update: DaysaveItemComicUpdateDataInput;
  create: DaysaveItemComicCreateInput;
}

export interface DaysaveItemConspiracyUpdateOneInput {
  create?: DaysaveItemConspiracyCreateInput;
  update?: DaysaveItemConspiracyUpdateDataInput;
  upsert?: DaysaveItemConspiracyUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemConspiracyUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemConspiracyUpsertNestedInput {
  update: DaysaveItemConspiracyUpdateDataInput;
  create: DaysaveItemConspiracyCreateInput;
}

export interface DaysaveItemCookingUpdateOneInput {
  create?: DaysaveItemCookingCreateInput;
  update?: DaysaveItemCookingUpdateDataInput;
  upsert?: DaysaveItemCookingUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemCookingUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCookingUpsertNestedInput {
  update: DaysaveItemCookingUpdateDataInput;
  create: DaysaveItemCookingCreateInput;
}

export interface DaysaveItemCrappyDesignUpdateOneInput {
  create?: DaysaveItemCrappyDesignCreateInput;
  update?: DaysaveItemCrappyDesignUpdateDataInput;
  upsert?: DaysaveItemCrappyDesignUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemCrappyDesignUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCrappyDesignUpsertNestedInput {
  update: DaysaveItemCrappyDesignUpdateDataInput;
  create: DaysaveItemCrappyDesignCreateInput;
}

export interface DaysaveItemDankmemeUpdateOneInput {
  create?: DaysaveItemDankmemeCreateInput;
  update?: DaysaveItemDankmemeUpdateDataInput;
  upsert?: DaysaveItemDankmemeUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemDankmemeUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDankmemeUpsertNestedInput {
  update: DaysaveItemDankmemeUpdateDataInput;
  create: DaysaveItemDankmemeCreateInput;
}

export interface DaysaveItemDestinyTheGameUpdateOneInput {
  create?: DaysaveItemDestinyTheGameCreateInput;
  update?: DaysaveItemDestinyTheGameUpdateDataInput;
  upsert?: DaysaveItemDestinyTheGameUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemDestinyTheGameUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDestinyTheGameUpsertNestedInput {
  update: DaysaveItemDestinyTheGameUpdateDataInput;
  create: DaysaveItemDestinyTheGameCreateInput;
}

export interface DaysaveItemDnDUpdateOneInput {
  create?: DaysaveItemDnDCreateInput;
  update?: DaysaveItemDnDUpdateDataInput;
  upsert?: DaysaveItemDnDUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemDnDUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDnDUpsertNestedInput {
  update: DaysaveItemDnDUpdateDataInput;
  create: DaysaveItemDnDCreateInput;
}

export interface DaysaveItemDocumentaryUpdateOneInput {
  create?: DaysaveItemDocumentaryCreateInput;
  update?: DaysaveItemDocumentaryUpdateDataInput;
  upsert?: DaysaveItemDocumentaryUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemDocumentaryUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDocumentaryUpsertNestedInput {
  update: DaysaveItemDocumentaryUpdateDataInput;
  create: DaysaveItemDocumentaryCreateInput;
}

export interface DaysaveItemDogUpdateOneInput {
  create?: DaysaveItemDogCreateInput;
  update?: DaysaveItemDogUpdateDataInput;
  upsert?: DaysaveItemDogUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemDogUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDogUpsertNestedInput {
  update: DaysaveItemDogUpdateDataInput;
  create: DaysaveItemDogCreateInput;
}

export interface DaysaveItemDrawingUpdateOneInput {
  create?: DaysaveItemDrawingCreateInput;
  update?: DaysaveItemDrawingUpdateDataInput;
  upsert?: DaysaveItemDrawingUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemDrawingUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDrawingUpsertNestedInput {
  update: DaysaveItemDrawingUpdateDataInput;
  create: DaysaveItemDrawingCreateInput;
}

export interface DaysaveItemDunderMifflinUpdateOneInput {
  create?: DaysaveItemDunderMifflinCreateInput;
  update?: DaysaveItemDunderMifflinUpdateDataInput;
  upsert?: DaysaveItemDunderMifflinUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemDunderMifflinUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDunderMifflinUpsertNestedInput {
  update: DaysaveItemDunderMifflinUpdateDataInput;
  create: DaysaveItemDunderMifflinCreateInput;
}

export interface DaysaveItemEarthPornUpdateOneInput {
  create?: DaysaveItemEarthPornCreateInput;
  update?: DaysaveItemEarthPornUpdateDataInput;
  upsert?: DaysaveItemEarthPornUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemEarthPornUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemEarthPornUpsertNestedInput {
  update: DaysaveItemEarthPornUpdateDataInput;
  create: DaysaveItemEarthPornCreateInput;
}

export interface DaysaveItemEuropeUpdateOneInput {
  create?: DaysaveItemEuropeCreateInput;
  update?: DaysaveItemEuropeUpdateDataInput;
  upsert?: DaysaveItemEuropeUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemEuropeUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemEuropeUpsertNestedInput {
  update: DaysaveItemEuropeUpdateDataInput;
  create: DaysaveItemEuropeCreateInput;
}

export interface DaysaveItemExplainlikeimfiveUpdateOneInput {
  create?: DaysaveItemExplainlikeimfiveCreateInput;
  update?: DaysaveItemExplainlikeimfiveUpdateDataInput;
  upsert?: DaysaveItemExplainlikeimfiveUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemExplainlikeimfiveUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemExplainlikeimfiveUpsertNestedInput {
  update: DaysaveItemExplainlikeimfiveUpdateDataInput;
  create: DaysaveItemExplainlikeimfiveCreateInput;
}

export interface DaysaveItemEyebleachUpdateOneInput {
  create?: DaysaveItemEyebleachCreateInput;
  update?: DaysaveItemEyebleachUpdateDataInput;
  upsert?: DaysaveItemEyebleachUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemEyebleachUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemEyebleachUpsertNestedInput {
  update: DaysaveItemEyebleachUpdateDataInput;
  create: DaysaveItemEyebleachCreateInput;
}

export interface DaysaveItemFitnessUpdateOneInput {
  create?: DaysaveItemFitnessCreateInput;
  update?: DaysaveItemFitnessUpdateDataInput;
  upsert?: DaysaveItemFitnessUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemFitnessUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFitnessUpsertNestedInput {
  update: DaysaveItemFitnessUpdateDataInput;
  create: DaysaveItemFitnessCreateInput;
}

export interface DaysaveItemFoodUpdateOneInput {
  create?: DaysaveItemFoodCreateInput;
  update?: DaysaveItemFoodUpdateDataInput;
  upsert?: DaysaveItemFoodUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemFoodUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFoodUpsertNestedInput {
  update: DaysaveItemFoodUpdateDataInput;
  create: DaysaveItemFoodCreateInput;
}

export interface DaysaveItemFoodPornUpdateOneInput {
  create?: DaysaveItemFoodPornCreateInput;
  update?: DaysaveItemFoodPornUpdateDataInput;
  upsert?: DaysaveItemFoodPornUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemFoodPornUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFoodPornUpsertNestedInput {
  update: DaysaveItemFoodPornUpdateDataInput;
  create: DaysaveItemFoodPornCreateInput;
}

export interface DaysaveItemFortNiteBRUpdateOneInput {
  create?: DaysaveItemFortNiteBRCreateInput;
  update?: DaysaveItemFortNiteBRUpdateDataInput;
  upsert?: DaysaveItemFortNiteBRUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemFortNiteBRUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFortNiteBRUpsertNestedInput {
  update: DaysaveItemFortNiteBRUpdateDataInput;
  create: DaysaveItemFortNiteBRCreateInput;
}

export interface DaysaveItemFrugalUpdateOneInput {
  create?: DaysaveItemFrugalCreateInput;
  update?: DaysaveItemFrugalUpdateDataInput;
  upsert?: DaysaveItemFrugalUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemFrugalUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFrugalUpsertNestedInput {
  update: DaysaveItemFrugalUpdateDataInput;
  create: DaysaveItemFrugalCreateInput;
}

export interface DaysaveItemFunnyUpdateOneInput {
  create?: DaysaveItemFunnyCreateInput;
  update?: DaysaveItemFunnyUpdateDataInput;
  upsert?: DaysaveItemFunnyUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemFunnyUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFunnyUpsertNestedInput {
  update: DaysaveItemFunnyUpdateDataInput;
  create: DaysaveItemFunnyCreateInput;
}

export interface DaysaveItemFuturologyUpdateOneInput {
  create?: DaysaveItemFuturologyCreateInput;
  update?: DaysaveItemFuturologyUpdateDataInput;
  upsert?: DaysaveItemFuturologyUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemFuturologyUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFuturologyUpsertNestedInput {
  update: DaysaveItemFuturologyUpdateDataInput;
  create: DaysaveItemFuturologyCreateInput;
}

export interface DaysaveItemGadgetUpdateOneInput {
  create?: DaysaveItemGadgetCreateInput;
  update?: DaysaveItemGadgetUpdateDataInput;
  upsert?: DaysaveItemGadgetUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemGadgetUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGadgetUpsertNestedInput {
  update: DaysaveItemGadgetUpdateDataInput;
  create: DaysaveItemGadgetCreateInput;
}

export interface DaysaveItemGameUpdateOneInput {
  create?: DaysaveItemGameCreateInput;
  update?: DaysaveItemGameUpdateDataInput;
  upsert?: DaysaveItemGameUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemGameUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGameUpsertNestedInput {
  update: DaysaveItemGameUpdateDataInput;
  create: DaysaveItemGameCreateInput;
}

export interface DaysaveItemGamingUpdateOneInput {
  create?: DaysaveItemGamingCreateInput;
  update?: DaysaveItemGamingUpdateDataInput;
  upsert?: DaysaveItemGamingUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemGamingUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGamingUpsertNestedInput {
  update: DaysaveItemGamingUpdateDataInput;
  create: DaysaveItemGamingCreateInput;
}

export interface DaysaveItemGardeningUpdateOneInput {
  create?: DaysaveItemGardeningCreateInput;
  update?: DaysaveItemGardeningUpdateDataInput;
  upsert?: DaysaveItemGardeningUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemGardeningUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGardeningUpsertNestedInput {
  update: DaysaveItemGardeningUpdateDataInput;
  create: DaysaveItemGardeningCreateInput;
}

export interface DaysaveItemGifUpdateOneInput {
  create?: DaysaveItemGifCreateInput;
  update?: DaysaveItemGifUpdateDataInput;
  upsert?: DaysaveItemGifUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemGifUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGifUpsertNestedInput {
  update: DaysaveItemGifUpdateDataInput;
  create: DaysaveItemGifCreateInput;
}

export interface DaysaveItemGonewildUpdateOneInput {
  create?: DaysaveItemGonewildCreateInput;
  update?: DaysaveItemGonewildUpdateDataInput;
  upsert?: DaysaveItemGonewildUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemGonewildUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGonewildUpsertNestedInput {
  update: DaysaveItemGonewildUpdateDataInput;
  create: DaysaveItemGonewildCreateInput;
}

export interface DaysaveItemHiphopheadUpdateOneInput {
  create?: DaysaveItemHiphopheadCreateInput;
  update?: DaysaveItemHiphopheadUpdateDataInput;
  upsert?: DaysaveItemHiphopheadUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemHiphopheadUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemHiphopheadUpsertNestedInput {
  update: DaysaveItemHiphopheadUpdateDataInput;
  create: DaysaveItemHiphopheadCreateInput;
}

export interface DaysaveItemHockeyUpdateOneInput {
  create?: DaysaveItemHockeyCreateInput;
  update?: DaysaveItemHockeyUpdateDataInput;
  upsert?: DaysaveItemHockeyUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemHockeyUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemHockeyUpsertNestedInput {
  update: DaysaveItemHockeyUpdateDataInput;
  create: DaysaveItemHockeyCreateInput;
}

export interface DaysaveItemIamverysmartUpdateOneInput {
  create?: DaysaveItemIamverysmartCreateInput;
  update?: DaysaveItemIamverysmartUpdateDataInput;
  upsert?: DaysaveItemIamverysmartUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemIamverysmartUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemIamverysmartUpsertNestedInput {
  update: DaysaveItemIamverysmartUpdateDataInput;
  create: DaysaveItemIamverysmartCreateInput;
}

export interface DaysaveItemInstant_regretUpdateOneInput {
  create?: DaysaveItemInstant_regretCreateInput;
  update?: DaysaveItemInstant_regretUpdateDataInput;
  upsert?: DaysaveItemInstant_regretUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemInstant_regretUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemInstant_regretUpsertNestedInput {
  update: DaysaveItemInstant_regretUpdateDataInput;
  create: DaysaveItemInstant_regretCreateInput;
}

export interface DaysaveItemInterestingasfuckUpdateOneInput {
  create?: DaysaveItemInterestingasfuckCreateInput;
  update?: DaysaveItemInterestingasfuckUpdateDataInput;
  upsert?: DaysaveItemInterestingasfuckUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemInterestingasfuckUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemInterestingasfuckUpsertNestedInput {
  update: DaysaveItemInterestingasfuckUpdateDataInput;
  create: DaysaveItemInterestingasfuckCreateInput;
}

export interface DaysaveItemJokeUpdateOneInput {
  create?: DaysaveItemJokeCreateInput;
  update?: DaysaveItemJokeUpdateDataInput;
  upsert?: DaysaveItemJokeUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemJokeUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemJokeUpsertNestedInput {
  update: DaysaveItemJokeUpdateDataInput;
  create: DaysaveItemJokeCreateInput;
}

export interface DaysaveItemLeagueoflegendUpdateOneInput {
  create?: DaysaveItemLeagueoflegendCreateInput;
  update?: DaysaveItemLeagueoflegendUpdateDataInput;
  upsert?: DaysaveItemLeagueoflegendUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemLeagueoflegendUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemLeagueoflegendUpsertNestedInput {
  update: DaysaveItemLeagueoflegendUpdateDataInput;
  create: DaysaveItemLeagueoflegendCreateInput;
}

export interface DaysaveItemLegaladviceUpdateOneInput {
  create?: DaysaveItemLegaladviceCreateInput;
  update?: DaysaveItemLegaladviceUpdateDataInput;
  upsert?: DaysaveItemLegaladviceUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemLegaladviceUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemLegaladviceUpsertNestedInput {
  update: DaysaveItemLegaladviceUpdateDataInput;
  create: DaysaveItemLegaladviceCreateInput;
}

export interface DaysaveItemLifeProTipUpdateOneInput {
  create?: DaysaveItemLifeProTipCreateInput;
  update?: DaysaveItemLifeProTipUpdateDataInput;
  upsert?: DaysaveItemLifeProTipUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemLifeProTipUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemLifeProTipUpsertNestedInput {
  update: DaysaveItemLifeProTipUpdateDataInput;
  create: DaysaveItemLifeProTipCreateInput;
}

export interface DaysaveItemListentothiUpdateOneInput {
  create?: DaysaveItemListentothiCreateInput;
  update?: DaysaveItemListentothiUpdateDataInput;
  upsert?: DaysaveItemListentothiUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemListentothiUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemListentothiUpsertNestedInput {
  update: DaysaveItemListentothiUpdateDataInput;
  create: DaysaveItemListentothiCreateInput;
}

export interface DaysaveItemMadeMeSmileUpdateOneInput {
  create?: DaysaveItemMadeMeSmileCreateInput;
  update?: DaysaveItemMadeMeSmileUpdateDataInput;
  upsert?: DaysaveItemMadeMeSmileUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemMadeMeSmileUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMadeMeSmileUpsertNestedInput {
  update: DaysaveItemMadeMeSmileUpdateDataInput;
  create: DaysaveItemMadeMeSmileCreateInput;
}

export interface DaysaveItemMe_irlUpdateOneInput {
  create?: DaysaveItemMe_irlCreateInput;
  update?: DaysaveItemMe_irlUpdateDataInput;
  upsert?: DaysaveItemMe_irlUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemMe_irlUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMe_irlUpsertNestedInput {
  update: DaysaveItemMe_irlUpdateDataInput;
  create: DaysaveItemMe_irlCreateInput;
}

export interface DaysaveItemMemeEconomyUpdateOneInput {
  create?: DaysaveItemMemeEconomyCreateInput;
  update?: DaysaveItemMemeEconomyUpdateDataInput;
  upsert?: DaysaveItemMemeEconomyUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemMemeEconomyUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMemeEconomyUpsertNestedInput {
  update: DaysaveItemMemeEconomyUpdateDataInput;
  create: DaysaveItemMemeEconomyCreateInput;
}

export interface DaysaveItemMemeUpdateOneInput {
  create?: DaysaveItemMemeCreateInput;
  update?: DaysaveItemMemeUpdateDataInput;
  upsert?: DaysaveItemMemeUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemMemeUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMemeUpsertNestedInput {
  update: DaysaveItemMemeUpdateDataInput;
  create: DaysaveItemMemeCreateInput;
}

export interface DaysaveItemMildlyinfuriatingUpdateOneInput {
  create?: DaysaveItemMildlyinfuriatingCreateInput;
  update?: DaysaveItemMildlyinfuriatingUpdateDataInput;
  upsert?: DaysaveItemMildlyinfuriatingUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemMildlyinfuriatingUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMildlyinfuriatingUpsertNestedInput {
  update: DaysaveItemMildlyinfuriatingUpdateDataInput;
  create: DaysaveItemMildlyinfuriatingCreateInput;
}

export interface DaysaveItemMildlyinterestingUpdateOneInput {
  create?: DaysaveItemMildlyinterestingCreateInput;
  update?: DaysaveItemMildlyinterestingUpdateDataInput;
  upsert?: DaysaveItemMildlyinterestingUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemMildlyinterestingUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMildlyinterestingUpsertNestedInput {
  update: DaysaveItemMildlyinterestingUpdateDataInput;
  create: DaysaveItemMildlyinterestingCreateInput;
}

export interface DaysaveItemMinecraftUpdateOneInput {
  create?: DaysaveItemMinecraftCreateInput;
  update?: DaysaveItemMinecraftUpdateDataInput;
  upsert?: DaysaveItemMinecraftUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemMinecraftUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMinecraftUpsertNestedInput {
  update: DaysaveItemMinecraftUpdateDataInput;
  create: DaysaveItemMinecraftCreateInput;
}

export interface DaysaveItemMMAUpdateOneInput {
  create?: DaysaveItemMMACreateInput;
  update?: DaysaveItemMMAUpdateDataInput;
  upsert?: DaysaveItemMMAUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemMMAUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMMAUpsertNestedInput {
  update: DaysaveItemMMAUpdateDataInput;
  create: DaysaveItemMMACreateInput;
}

export interface DaysaveItemMovieDetailUpdateOneInput {
  create?: DaysaveItemMovieDetailCreateInput;
  update?: DaysaveItemMovieDetailUpdateDataInput;
  upsert?: DaysaveItemMovieDetailUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemMovieDetailUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMovieDetailUpsertNestedInput {
  update: DaysaveItemMovieDetailUpdateDataInput;
  create: DaysaveItemMovieDetailCreateInput;
}

export interface DaysaveItemMovieUpdateOneInput {
  create?: DaysaveItemMovieCreateInput;
  update?: DaysaveItemMovieUpdateDataInput;
  upsert?: DaysaveItemMovieUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemMovieUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMovieUpsertNestedInput {
  update: DaysaveItemMovieUpdateDataInput;
  create: DaysaveItemMovieCreateInput;
}

export interface DaysaveItemMurderedByWordUpdateOneInput {
  create?: DaysaveItemMurderedByWordCreateInput;
  update?: DaysaveItemMurderedByWordUpdateDataInput;
  upsert?: DaysaveItemMurderedByWordUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemMurderedByWordUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMurderedByWordUpsertNestedInput {
  update: DaysaveItemMurderedByWordUpdateDataInput;
  create: DaysaveItemMurderedByWordCreateInput;
}

export interface DaysaveItemNatureismetalUpdateOneInput {
  create?: DaysaveItemNatureismetalCreateInput;
  update?: DaysaveItemNatureismetalUpdateDataInput;
  upsert?: DaysaveItemNatureismetalUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemNatureismetalUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNatureismetalUpsertNestedInput {
  update: DaysaveItemNatureismetalUpdateDataInput;
  create: DaysaveItemNatureismetalCreateInput;
}

export interface DaysaveItemNbaUpdateOneInput {
  create?: DaysaveItemNbaCreateInput;
  update?: DaysaveItemNbaUpdateDataInput;
  upsert?: DaysaveItemNbaUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemNbaUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNbaUpsertNestedInput {
  update: DaysaveItemNbaUpdateDataInput;
  create: DaysaveItemNbaCreateInput;
}

export interface DaysaveItemNevertellmetheoddUpdateOneInput {
  create?: DaysaveItemNevertellmetheoddCreateInput;
  update?: DaysaveItemNevertellmetheoddUpdateDataInput;
  upsert?: DaysaveItemNevertellmetheoddUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemNevertellmetheoddUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNevertellmetheoddUpsertNestedInput {
  update: DaysaveItemNevertellmetheoddUpdateDataInput;
  create: DaysaveItemNevertellmetheoddCreateInput;
}

export interface DaysaveItemNewsUpdateOneInput {
  create?: DaysaveItemNewsCreateInput;
  update?: DaysaveItemNewsUpdateDataInput;
  upsert?: DaysaveItemNewsUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemNewsUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNewsUpsertNestedInput {
  update: DaysaveItemNewsUpdateDataInput;
  create: DaysaveItemNewsCreateInput;
}

export interface DaysaveItemNflUpdateOneInput {
  create?: DaysaveItemNflCreateInput;
  update?: DaysaveItemNflUpdateDataInput;
  upsert?: DaysaveItemNflUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemNflUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNflUpsertNestedInput {
  update: DaysaveItemNflUpdateDataInput;
  create: DaysaveItemNflCreateInput;
}

export interface DaysaveItemNiceguyUpdateOneInput {
  create?: DaysaveItemNiceguyCreateInput;
  update?: DaysaveItemNiceguyUpdateDataInput;
  upsert?: DaysaveItemNiceguyUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemNiceguyUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNiceguyUpsertNestedInput {
  update: DaysaveItemNiceguyUpdateDataInput;
  create: DaysaveItemNiceguyCreateInput;
}

export interface DaysaveItemNintendoSwitchUpdateOneInput {
  create?: DaysaveItemNintendoSwitchCreateInput;
  update?: DaysaveItemNintendoSwitchUpdateDataInput;
  upsert?: DaysaveItemNintendoSwitchUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemNintendoSwitchUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNintendoSwitchUpsertNestedInput {
  update: DaysaveItemNintendoSwitchUpdateDataInput;
  create: DaysaveItemNintendoSwitchCreateInput;
}

export interface DaysaveItemNosleepUpdateOneInput {
  create?: DaysaveItemNosleepCreateInput;
  update?: DaysaveItemNosleepUpdateDataInput;
  upsert?: DaysaveItemNosleepUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemNosleepUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNosleepUpsertNestedInput {
  update: DaysaveItemNosleepUpdateDataInput;
  create: DaysaveItemNosleepCreateInput;
}

export interface DaysaveItemNoStupidQuestionUpdateOneInput {
  create?: DaysaveItemNoStupidQuestionCreateInput;
  update?: DaysaveItemNoStupidQuestionUpdateDataInput;
  upsert?: DaysaveItemNoStupidQuestionUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemNoStupidQuestionUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNoStupidQuestionUpsertNestedInput {
  update: DaysaveItemNoStupidQuestionUpdateDataInput;
  create: DaysaveItemNoStupidQuestionCreateInput;
}

export interface DaysaveItemNottheonionUpdateOneInput {
  create?: DaysaveItemNottheonionCreateInput;
  update?: DaysaveItemNottheonionUpdateDataInput;
  upsert?: DaysaveItemNottheonionUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemNottheonionUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNottheonionUpsertNestedInput {
  update: DaysaveItemNottheonionUpdateDataInput;
  create: DaysaveItemNottheonionCreateInput;
}

export interface DaysaveItemOddlysatisfyingUpdateOneInput {
  create?: DaysaveItemOddlysatisfyingCreateInput;
  update?: DaysaveItemOddlysatisfyingUpdateDataInput;
  upsert?: DaysaveItemOddlysatisfyingUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemOddlysatisfyingUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemOddlysatisfyingUpsertNestedInput {
  update: DaysaveItemOddlysatisfyingUpdateDataInput;
  create: DaysaveItemOddlysatisfyingCreateInput;
}

export interface DaysaveItemOldSchoolCoolUpdateOneInput {
  create?: DaysaveItemOldSchoolCoolCreateInput;
  update?: DaysaveItemOldSchoolCoolUpdateDataInput;
  upsert?: DaysaveItemOldSchoolCoolUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemOldSchoolCoolUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemOldSchoolCoolUpsertNestedInput {
  update: DaysaveItemOldSchoolCoolUpdateDataInput;
  create: DaysaveItemOldSchoolCoolCreateInput;
}

export interface DaysaveItemOverwatchUpdateOneInput {
  create?: DaysaveItemOverwatchCreateInput;
  update?: DaysaveItemOverwatchUpdateDataInput;
  upsert?: DaysaveItemOverwatchUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemOverwatchUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemOverwatchUpsertNestedInput {
  update: DaysaveItemOverwatchUpdateDataInput;
  create: DaysaveItemOverwatchCreateInput;
}

export interface DaysaveItemPcgamingUpdateOneInput {
  create?: DaysaveItemPcgamingCreateInput;
  update?: DaysaveItemPcgamingUpdateDataInput;
  upsert?: DaysaveItemPcgamingUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemPcgamingUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPcgamingUpsertNestedInput {
  update: DaysaveItemPcgamingUpdateDataInput;
  create: DaysaveItemPcgamingCreateInput;
}

export interface DaysaveItemPcmasterraceUpdateOneInput {
  create?: DaysaveItemPcmasterraceCreateInput;
  update?: DaysaveItemPcmasterraceUpdateDataInput;
  upsert?: DaysaveItemPcmasterraceUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemPcmasterraceUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPcmasterraceUpsertNestedInput {
  update: DaysaveItemPcmasterraceUpdateDataInput;
  create: DaysaveItemPcmasterraceCreateInput;
}

export interface DaysaveItemPersonalfinanceUpdateOneInput {
  create?: DaysaveItemPersonalfinanceCreateInput;
  update?: DaysaveItemPersonalfinanceUpdateDataInput;
  upsert?: DaysaveItemPersonalfinanceUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemPersonalfinanceUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPersonalfinanceUpsertNestedInput {
  update: DaysaveItemPersonalfinanceUpdateDataInput;
  create: DaysaveItemPersonalfinanceCreateInput;
}

export interface DaysaveItemPewdiepieSubmissionUpdateOneInput {
  create?: DaysaveItemPewdiepieSubmissionCreateInput;
  update?: DaysaveItemPewdiepieSubmissionUpdateDataInput;
  upsert?: DaysaveItemPewdiepieSubmissionUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemPewdiepieSubmissionUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPewdiepieSubmissionUpsertNestedInput {
  update: DaysaveItemPewdiepieSubmissionUpdateDataInput;
  create: DaysaveItemPewdiepieSubmissionCreateInput;
}

export interface DaysaveItemPhotographyUpdateOneInput {
  create?: DaysaveItemPhotographyCreateInput;
  update?: DaysaveItemPhotographyUpdateDataInput;
  upsert?: DaysaveItemPhotographyUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemPhotographyUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPhotographyUpsertNestedInput {
  update: DaysaveItemPhotographyUpdateDataInput;
  create: DaysaveItemPhotographyCreateInput;
}

export interface DaysaveItemPicUpdateOneInput {
  create?: DaysaveItemPicCreateInput;
  update?: DaysaveItemPicUpdateDataInput;
  upsert?: DaysaveItemPicUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemPicUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPicUpsertNestedInput {
  update: DaysaveItemPicUpdateDataInput;
  create: DaysaveItemPicCreateInput;
}

export interface DaysaveItemPokemonUpdateOneInput {
  create?: DaysaveItemPokemonCreateInput;
  update?: DaysaveItemPokemonUpdateDataInput;
  upsert?: DaysaveItemPokemonUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemPokemonUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPokemonUpsertNestedInput {
  update: DaysaveItemPokemonUpdateDataInput;
  create: DaysaveItemPokemonCreateInput;
}

export interface DaysaveItemPoliticUpdateOneInput {
  create?: DaysaveItemPoliticCreateInput;
  update?: DaysaveItemPoliticUpdateDataInput;
  upsert?: DaysaveItemPoliticUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemPoliticUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPoliticUpsertNestedInput {
  update: DaysaveItemPoliticUpdateDataInput;
  create: DaysaveItemPoliticCreateInput;
}

export interface DaysaveItemPrequelMemeUpdateOneInput {
  create?: DaysaveItemPrequelMemeCreateInput;
  update?: DaysaveItemPrequelMemeUpdateDataInput;
  upsert?: DaysaveItemPrequelMemeUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemPrequelMemeUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPrequelMemeUpsertNestedInput {
  update: DaysaveItemPrequelMemeUpdateDataInput;
  create: DaysaveItemPrequelMemeCreateInput;
}

export interface DaysaveItemPS4UpdateOneInput {
  create?: DaysaveItemPS4CreateInput;
  update?: DaysaveItemPS4UpdateDataInput;
  upsert?: DaysaveItemPS4UpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemPS4UpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPS4UpsertNestedInput {
  update: DaysaveItemPS4UpdateDataInput;
  create: DaysaveItemPS4CreateInput;
}

export interface DaysaveItemReactiongifUpdateOneInput {
  create?: DaysaveItemReactiongifCreateInput;
  update?: DaysaveItemReactiongifUpdateDataInput;
  upsert?: DaysaveItemReactiongifUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemReactiongifUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemReactiongifUpsertNestedInput {
  update: DaysaveItemReactiongifUpdateDataInput;
  create: DaysaveItemReactiongifCreateInput;
}

export interface DaysaveItemRelationship_adviceUpdateOneInput {
  create?: DaysaveItemRelationship_adviceCreateInput;
  update?: DaysaveItemRelationship_adviceUpdateDataInput;
  upsert?: DaysaveItemRelationship_adviceUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemRelationship_adviceUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRelationship_adviceUpsertNestedInput {
  update: DaysaveItemRelationship_adviceUpdateDataInput;
  create: DaysaveItemRelationship_adviceCreateInput;
}

export interface DaysaveItemRelationshipUpdateOneInput {
  create?: DaysaveItemRelationshipCreateInput;
  update?: DaysaveItemRelationshipUpdateDataInput;
  upsert?: DaysaveItemRelationshipUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemRelationshipUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRelationshipUpsertNestedInput {
  update: DaysaveItemRelationshipUpdateDataInput;
  create: DaysaveItemRelationshipCreateInput;
}

export interface DaysaveItemRickandmortyUpdateOneInput {
  create?: DaysaveItemRickandmortyCreateInput;
  update?: DaysaveItemRickandmortyUpdateDataInput;
  upsert?: DaysaveItemRickandmortyUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemRickandmortyUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRickandmortyUpsertNestedInput {
  update: DaysaveItemRickandmortyUpdateDataInput;
  create: DaysaveItemRickandmortyCreateInput;
}

export interface DaysaveItemRoadcamUpdateOneInput {
  create?: DaysaveItemRoadcamCreateInput;
  update?: DaysaveItemRoadcamUpdateDataInput;
  upsert?: DaysaveItemRoadcamUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemRoadcamUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRoadcamUpsertNestedInput {
  update: DaysaveItemRoadcamUpdateDataInput;
  create: DaysaveItemRoadcamCreateInput;
}

export interface DaysaveItemRoastMeUpdateOneInput {
  create?: DaysaveItemRoastMeCreateInput;
  update?: DaysaveItemRoastMeUpdateDataInput;
  upsert?: DaysaveItemRoastMeUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemRoastMeUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRoastMeUpsertNestedInput {
  update: DaysaveItemRoastMeUpdateDataInput;
  create: DaysaveItemRoastMeCreateInput;
}

export interface DaysaveItemScienceUpdateOneInput {
  create?: DaysaveItemScienceCreateInput;
  update?: DaysaveItemScienceUpdateDataInput;
  upsert?: DaysaveItemScienceUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemScienceUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemScienceUpsertNestedInput {
  update: DaysaveItemScienceUpdateDataInput;
  create: DaysaveItemScienceCreateInput;
}

export interface DaysaveItemSexUpdateOneInput {
  create?: DaysaveItemSexCreateInput;
  update?: DaysaveItemSexUpdateDataInput;
  upsert?: DaysaveItemSexUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemSexUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSexUpsertNestedInput {
  update: DaysaveItemSexUpdateDataInput;
  create: DaysaveItemSexCreateInput;
}

export interface DaysaveItemShittyfoodpornUpdateOneInput {
  create?: DaysaveItemShittyfoodpornCreateInput;
  update?: DaysaveItemShittyfoodpornUpdateDataInput;
  upsert?: DaysaveItemShittyfoodpornUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemShittyfoodpornUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemShittyfoodpornUpsertNestedInput {
  update: DaysaveItemShittyfoodpornUpdateDataInput;
  create: DaysaveItemShittyfoodpornCreateInput;
}

export interface DaysaveItemShowerthoughtUpdateOneInput {
  create?: DaysaveItemShowerthoughtCreateInput;
  update?: DaysaveItemShowerthoughtUpdateDataInput;
  upsert?: DaysaveItemShowerthoughtUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemShowerthoughtUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemShowerthoughtUpsertNestedInput {
  update: DaysaveItemShowerthoughtUpdateDataInput;
  create: DaysaveItemShowerthoughtCreateInput;
}

export interface DaysaveItemSkincareAddictionUpdateOneInput {
  create?: DaysaveItemSkincareAddictionCreateInput;
  update?: DaysaveItemSkincareAddictionUpdateDataInput;
  upsert?: DaysaveItemSkincareAddictionUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemSkincareAddictionUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSkincareAddictionUpsertNestedInput {
  update: DaysaveItemSkincareAddictionUpdateDataInput;
  create: DaysaveItemSkincareAddictionCreateInput;
}

export interface DaysaveItemSlowcookingUpdateOneInput {
  create?: DaysaveItemSlowcookingCreateInput;
  update?: DaysaveItemSlowcookingUpdateDataInput;
  upsert?: DaysaveItemSlowcookingUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemSlowcookingUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSlowcookingUpsertNestedInput {
  update: DaysaveItemSlowcookingUpdateDataInput;
  create: DaysaveItemSlowcookingCreateInput;
}

export interface DaysaveItemSpaceUpdateOneInput {
  create?: DaysaveItemSpaceCreateInput;
  update?: DaysaveItemSpaceUpdateDataInput;
  upsert?: DaysaveItemSpaceUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemSpaceUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSpaceUpsertNestedInput {
  update: DaysaveItemSpaceUpdateDataInput;
  create: DaysaveItemSpaceCreateInput;
}

export interface DaysaveItemSportUpdateOneInput {
  create?: DaysaveItemSportCreateInput;
  update?: DaysaveItemSportUpdateDataInput;
  upsert?: DaysaveItemSportUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemSportUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSportUpsertNestedInput {
  update: DaysaveItemSportUpdateDataInput;
  create: DaysaveItemSportCreateInput;
}

export interface DaysaveItemStarterpackUpdateOneInput {
  create?: DaysaveItemStarterpackCreateInput;
  update?: DaysaveItemStarterpackUpdateDataInput;
  upsert?: DaysaveItemStarterpackUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemStarterpackUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemStarterpackUpsertNestedInput {
  update: DaysaveItemStarterpackUpdateDataInput;
  create: DaysaveItemStarterpackCreateInput;
}

export interface DaysaveItemStarWarUpdateOneInput {
  create?: DaysaveItemStarWarCreateInput;
  update?: DaysaveItemStarWarUpdateDataInput;
  upsert?: DaysaveItemStarWarUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemStarWarUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemStarWarUpsertNestedInput {
  update: DaysaveItemStarWarUpdateDataInput;
  create: DaysaveItemStarWarCreateInput;
}

export interface DaysaveItemStreetwearUpdateOneInput {
  create?: DaysaveItemStreetwearCreateInput;
  update?: DaysaveItemStreetwearUpdateDataInput;
  upsert?: DaysaveItemStreetwearUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemStreetwearUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemStreetwearUpsertNestedInput {
  update: DaysaveItemStreetwearUpdateDataInput;
  create: DaysaveItemStreetwearCreateInput;
}

export interface DaysaveItemTattooUpdateOneInput {
  create?: DaysaveItemTattooCreateInput;
  update?: DaysaveItemTattooUpdateDataInput;
  upsert?: DaysaveItemTattooUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemTattooUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTattooUpsertNestedInput {
  update: DaysaveItemTattooUpdateDataInput;
  create: DaysaveItemTattooCreateInput;
}

export interface DaysaveItemTeenagerUpdateOneInput {
  create?: DaysaveItemTeenagerCreateInput;
  update?: DaysaveItemTeenagerUpdateDataInput;
  upsert?: DaysaveItemTeenagerUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemTeenagerUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTeenagerUpsertNestedInput {
  update: DaysaveItemTeenagerUpdateDataInput;
  create: DaysaveItemTeenagerCreateInput;
}

export interface DaysaveItemTelevisionUpdateOneInput {
  create?: DaysaveItemTelevisionCreateInput;
  update?: DaysaveItemTelevisionUpdateDataInput;
  upsert?: DaysaveItemTelevisionUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemTelevisionUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTelevisionUpsertNestedInput {
  update: DaysaveItemTelevisionUpdateDataInput;
  create: DaysaveItemTelevisionCreateInput;
}

export interface DaysaveItemThatHappenedUpdateOneInput {
  create?: DaysaveItemThatHappenedCreateInput;
  update?: DaysaveItemThatHappenedUpdateDataInput;
  upsert?: DaysaveItemThatHappenedUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemThatHappenedUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemThatHappenedUpsertNestedInput {
  update: DaysaveItemThatHappenedUpdateDataInput;
  create: DaysaveItemThatHappenedCreateInput;
}

export interface DaysaveItemThe_DonaldUpdateOneInput {
  create?: DaysaveItemThe_DonaldCreateInput;
  update?: DaysaveItemThe_DonaldUpdateDataInput;
  upsert?: DaysaveItemThe_DonaldUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemThe_DonaldUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemThe_DonaldUpsertNestedInput {
  update: DaysaveItemThe_DonaldUpdateDataInput;
  create: DaysaveItemThe_DonaldCreateInput;
}

export interface DaysaveItemTherewasanattemptUpdateOneInput {
  create?: DaysaveItemTherewasanattemptCreateInput;
  update?: DaysaveItemTherewasanattemptUpdateDataInput;
  upsert?: DaysaveItemTherewasanattemptUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemTherewasanattemptUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTherewasanattemptUpsertNestedInput {
  update: DaysaveItemTherewasanattemptUpdateDataInput;
  create: DaysaveItemTherewasanattemptCreateInput;
}

export interface DaysaveItemTinderUpdateOneInput {
  create?: DaysaveItemTinderCreateInput;
  update?: DaysaveItemTinderUpdateDataInput;
  upsert?: DaysaveItemTinderUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemTinderUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTinderUpsertNestedInput {
  update: DaysaveItemTinderUpdateDataInput;
  create: DaysaveItemTinderCreateInput;
}

export interface DaysaveItemTodayilearnedUpdateOneInput {
  create?: DaysaveItemTodayilearnedCreateInput;
  update?: DaysaveItemTodayilearnedUpdateDataInput;
  upsert?: DaysaveItemTodayilearnedUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemTodayilearnedUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTodayilearnedUpsertNestedInput {
  update: DaysaveItemTodayilearnedUpdateDataInput;
  create: DaysaveItemTodayilearnedCreateInput;
}

export interface DaysaveItemTrashyUpdateOneInput {
  create?: DaysaveItemTrashyCreateInput;
  update?: DaysaveItemTrashyUpdateDataInput;
  upsert?: DaysaveItemTrashyUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemTrashyUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTrashyUpsertNestedInput {
  update: DaysaveItemTrashyUpdateDataInput;
  create: DaysaveItemTrashyCreateInput;
}

export interface DaysaveItemTravelUpdateOneInput {
  create?: DaysaveItemTravelCreateInput;
  update?: DaysaveItemTravelUpdateDataInput;
  upsert?: DaysaveItemTravelUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemTravelUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTravelUpsertNestedInput {
  update: DaysaveItemTravelUpdateDataInput;
  create: DaysaveItemTravelCreateInput;
}

export interface DaysaveItemTreeUpdateOneInput {
  create?: DaysaveItemTreeCreateInput;
  update?: DaysaveItemTreeUpdateDataInput;
  upsert?: DaysaveItemTreeUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemTreeUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTreeUpsertNestedInput {
  update: DaysaveItemTreeUpdateDataInput;
  create: DaysaveItemTreeCreateInput;
}

export interface DaysaveItemTwoXChromosomeUpdateOneInput {
  create?: DaysaveItemTwoXChromosomeCreateInput;
  update?: DaysaveItemTwoXChromosomeUpdateDataInput;
  upsert?: DaysaveItemTwoXChromosomeUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemTwoXChromosomeUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTwoXChromosomeUpsertNestedInput {
  update: DaysaveItemTwoXChromosomeUpdateDataInput;
  create: DaysaveItemTwoXChromosomeCreateInput;
}

export interface DaysaveItemUnexpectedUpdateOneInput {
  create?: DaysaveItemUnexpectedCreateInput;
  update?: DaysaveItemUnexpectedUpdateDataInput;
  upsert?: DaysaveItemUnexpectedUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemUnexpectedUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemUnexpectedUpsertNestedInput {
  update: DaysaveItemUnexpectedUpdateDataInput;
  create: DaysaveItemUnexpectedCreateInput;
}

export interface DaysaveItemVideoUpdateOneInput {
  create?: DaysaveItemVideoCreateInput;
  update?: DaysaveItemVideoUpdateDataInput;
  upsert?: DaysaveItemVideoUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemVideoUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemVideoUpsertNestedInput {
  update: DaysaveItemVideoUpdateDataInput;
  create: DaysaveItemVideoCreateInput;
}

export interface DaysaveItemWatchPeopleDieInsideUpdateOneInput {
  create?: DaysaveItemWatchPeopleDieInsideCreateInput;
  update?: DaysaveItemWatchPeopleDieInsideUpdateDataInput;
  upsert?: DaysaveItemWatchPeopleDieInsideUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemWatchPeopleDieInsideUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWatchPeopleDieInsideUpsertNestedInput {
  update: DaysaveItemWatchPeopleDieInsideUpdateDataInput;
  create: DaysaveItemWatchPeopleDieInsideCreateInput;
}

export interface DaysaveItemWellthatsuckUpdateOneInput {
  create?: DaysaveItemWellthatsuckCreateInput;
  update?: DaysaveItemWellthatsuckUpdateDataInput;
  upsert?: DaysaveItemWellthatsuckUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemWellthatsuckUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWellthatsuckUpsertNestedInput {
  update: DaysaveItemWellthatsuckUpdateDataInput;
  create: DaysaveItemWellthatsuckCreateInput;
}

export interface DaysaveItemWhatcouldgowrongUpdateOneInput {
  create?: DaysaveItemWhatcouldgowrongCreateInput;
  update?: DaysaveItemWhatcouldgowrongUpdateDataInput;
  upsert?: DaysaveItemWhatcouldgowrongUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemWhatcouldgowrongUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWhatcouldgowrongUpsertNestedInput {
  update: DaysaveItemWhatcouldgowrongUpdateDataInput;
  create: DaysaveItemWhatcouldgowrongCreateInput;
}

export interface DaysaveItemWhitePeopleTwitterUpdateOneInput {
  create?: DaysaveItemWhitePeopleTwitterCreateInput;
  update?: DaysaveItemWhitePeopleTwitterUpdateDataInput;
  upsert?: DaysaveItemWhitePeopleTwitterUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemWhitePeopleTwitterUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWhitePeopleTwitterUpsertNestedInput {
  update: DaysaveItemWhitePeopleTwitterUpdateDataInput;
  create: DaysaveItemWhitePeopleTwitterCreateInput;
}

export interface DaysaveItemWholesomememeUpdateOneInput {
  create?: DaysaveItemWholesomememeCreateInput;
  update?: DaysaveItemWholesomememeUpdateDataInput;
  upsert?: DaysaveItemWholesomememeUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemWholesomememeUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWholesomememeUpsertNestedInput {
  update: DaysaveItemWholesomememeUpdateDataInput;
  create: DaysaveItemWholesomememeCreateInput;
}

export interface DaysaveItemWoodworkingUpdateOneInput {
  create?: DaysaveItemWoodworkingCreateInput;
  update?: DaysaveItemWoodworkingUpdateDataInput;
  upsert?: DaysaveItemWoodworkingUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemWoodworkingUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWoodworkingUpsertNestedInput {
  update: DaysaveItemWoodworkingUpdateDataInput;
  create: DaysaveItemWoodworkingCreateInput;
}

export interface DaysaveItemWorldnewUpdateOneInput {
  create?: DaysaveItemWorldnewCreateInput;
  update?: DaysaveItemWorldnewUpdateDataInput;
  upsert?: DaysaveItemWorldnewUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemWorldnewUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWorldnewUpsertNestedInput {
  update: DaysaveItemWorldnewUpdateDataInput;
  create: DaysaveItemWorldnewCreateInput;
}

export interface DaysaveItemWritingPromptUpdateOneInput {
  create?: DaysaveItemWritingPromptCreateInput;
  update?: DaysaveItemWritingPromptUpdateDataInput;
  upsert?: DaysaveItemWritingPromptUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemWritingPromptUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWritingPromptUpsertNestedInput {
  update: DaysaveItemWritingPromptUpdateDataInput;
  create: DaysaveItemWritingPromptCreateInput;
}

export interface DaysaveItemWTFUpdateOneInput {
  create?: DaysaveItemWTFCreateInput;
  update?: DaysaveItemWTFUpdateDataInput;
  upsert?: DaysaveItemWTFUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemWTFUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWTFUpsertNestedInput {
  update: DaysaveItemWTFUpdateDataInput;
  create: DaysaveItemWTFCreateInput;
}

export interface DaysaveItemXboxoneUpdateOneInput {
  create?: DaysaveItemXboxoneCreateInput;
  update?: DaysaveItemXboxoneUpdateDataInput;
  upsert?: DaysaveItemXboxoneUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemXboxoneUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemXboxoneUpsertNestedInput {
  update: DaysaveItemXboxoneUpdateDataInput;
  create: DaysaveItemXboxoneCreateInput;
}

export interface DaysaveItemYouShouldKnowUpdateOneInput {
  create?: DaysaveItemYouShouldKnowCreateInput;
  update?: DaysaveItemYouShouldKnowUpdateDataInput;
  upsert?: DaysaveItemYouShouldKnowUpsertNestedInput;
  delete?: Boolean;
  disconnect?: Boolean;
}

export interface DaysaveItemYouShouldKnowUpdateDataInput {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemYouShouldKnowUpsertNestedInput {
  update: DaysaveItemYouShouldKnowUpdateDataInput;
  create: DaysaveItemYouShouldKnowCreateInput;
}

export interface DaysaveItemUpsertNestedInput {
  update: DaysaveItemUpdateDataInput;
  create: DaysaveItemCreateInput;
}

export interface DaysaveUpdateManyMutationInput {
  __v?: Int;
  createdAt?: DateTimeInput;
  updatedAt?: DateTimeInput;
}

export interface DaysaveSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: DaysaveWhereInput;
  AND?: DaysaveSubscriptionWhereInput[] | DaysaveSubscriptionWhereInput;
}

export interface NodeNode {
  id: ID_Output;
}

export interface Daysave {
  _id: ID_Output;
  __v?: Int;
  createdAt?: DateTimeOutput;
  items?: DaysaveItem | null;
  updatedAt?: DateTimeOutput;
}

export interface DaysavePromise extends Promise<Daysave>, Fragmentable {
  _id: () => Promise<ID_Output>;
  __v: () => Promise<Int>;
  createdAt: () => Promise<DateTimeOutput>;
  items: <T = DaysaveItemPromise>() => T;
  updatedAt: () => Promise<DateTimeOutput>;
}

export interface DaysaveSubscription
  extends Promise<AsyncIterator<Daysave>>,
    Fragmentable {
  _id: () => Promise<AsyncIterator<ID_Output>>;
  __v: () => Promise<AsyncIterator<Int>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  items: <T = DaysaveItemSubscription>() => T;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface DaysaveItem {
  AdviceAnimals?: DaysaveItemAdviceAnimal | null;
  Android?: DaysaveItemAndroid | null;
  AnimalsBeingDerps?: DaysaveItemAnimalsBeingDerp | null;
  AnimalsBeingJerks?: DaysaveItemAnimalsBeingJerk | null;
  anime?: DaysaveItemAnime | null;
  apple?: DaysaveItemApple | null;
  AskMen?: DaysaveItemAskMan | null;
  AskReddit?: DaysaveItemAskReddit | null;
  askscience?: DaysaveItemAskscience | null;
  AskWomen?: DaysaveItemAskWoman | null;
  assholedesign?: DaysaveItemAssholedesign | null;
  aww?: DaysaveItemAww | null;
  baseball?: DaysaveItemBaseball | null;
  BlackPeopleTwitter?: DaysaveItemBlackPeopleTwitter | null;
  boardgames?: DaysaveItemBoardgame | null;
  buildapc?: DaysaveItemBuildapc | null;
  cars?: DaysaveItemCar | null;
  cats?: DaysaveItemCat | null;
  ChoosingBeggars?: DaysaveItemChoosingBeggar | null;
  comics?: DaysaveItemComic | null;
  conspiracy?: DaysaveItemConspiracy | null;
  Cooking?: DaysaveItemCooking | null;
  CrappyDesign?: DaysaveItemCrappyDesign | null;
  dankmemes?: DaysaveItemDankmeme | null;
  DestinyTheGame?: DaysaveItemDestinyTheGame | null;
  DnD?: DaysaveItemDnD | null;
  Documentaries?: DaysaveItemDocumentary | null;
  dogs?: DaysaveItemDog | null;
  drawing?: DaysaveItemDrawing | null;
  DunderMifflin?: DaysaveItemDunderMifflin | null;
  EarthPorn?: DaysaveItemEarthPorn | null;
  europe?: DaysaveItemEurope | null;
  explainlikeimfive?: DaysaveItemExplainlikeimfive | null;
  Eyebleach?: DaysaveItemEyebleach | null;
  Fitness?: DaysaveItemFitness | null;
  food?: DaysaveItemFood | null;
  FoodPorn?: DaysaveItemFoodPorn | null;
  FortNiteBR?: DaysaveItemFortNiteBR | null;
  Frugal?: DaysaveItemFrugal | null;
  funny?: DaysaveItemFunny | null;
  Futurology?: DaysaveItemFuturology | null;
  gadgets?: DaysaveItemGadget | null;
  Games?: DaysaveItemGame | null;
  gaming?: DaysaveItemGaming | null;
  gardening?: DaysaveItemGardening | null;
  gifs?: DaysaveItemGif | null;
  gonewild?: DaysaveItemGonewild | null;
  hiphopheads?: DaysaveItemHiphophead | null;
  hockey?: DaysaveItemHockey | null;
  iamverysmart?: DaysaveItemIamverysmart | null;
  instant_regret?: DaysaveItemInstant_regret | null;
  interestingasfuck?: DaysaveItemInterestingasfuck | null;
  Jokes?: DaysaveItemJoke | null;
  leagueoflegends?: DaysaveItemLeagueoflegend | null;
  legaladvice?: DaysaveItemLegaladvice | null;
  LifeProTips?: DaysaveItemLifeProTip | null;
  listentothis?: DaysaveItemListentothi | null;
  MadeMeSmile?: DaysaveItemMadeMeSmile | null;
  me_irl?: DaysaveItemMe_irl | null;
  MemeEconomy?: DaysaveItemMemeEconomy | null;
  memes?: DaysaveItemMeme | null;
  mildlyinfuriating?: DaysaveItemMildlyinfuriating | null;
  mildlyinteresting?: DaysaveItemMildlyinteresting | null;
  Minecraft?: DaysaveItemMinecraft | null;
  MMA?: DaysaveItemMMA | null;
  MovieDetails?: DaysaveItemMovieDetail | null;
  movies?: DaysaveItemMovie | null;
  MurderedByWords?: DaysaveItemMurderedByWord | null;
  natureismetal?: DaysaveItemNatureismetal | null;
  nba?: DaysaveItemNba | null;
  nevertellmetheodds?: DaysaveItemNevertellmetheodd | null;
  news?: DaysaveItemNews | null;
  nfl?: DaysaveItemNfl | null;
  niceguys?: DaysaveItemNiceguy | null;
  NintendoSwitch?: DaysaveItemNintendoSwitch | null;
  nosleep?: DaysaveItemNosleep | null;
  NoStupidQuestions?: DaysaveItemNoStupidQuestion | null;
  nottheonion?: DaysaveItemNottheonion | null;
  oddlysatisfying?: DaysaveItemOddlysatisfying | null;
  OldSchoolCool?: DaysaveItemOldSchoolCool | null;
  Overwatch?: DaysaveItemOverwatch | null;
  pcgaming?: DaysaveItemPcgaming | null;
  pcmasterrace?: DaysaveItemPcmasterrace | null;
  personalfinance?: DaysaveItemPersonalfinance | null;
  PewdiepieSubmissions?: DaysaveItemPewdiepieSubmission | null;
  photography?: DaysaveItemPhotography | null;
  pics?: DaysaveItemPic | null;
  pokemon?: DaysaveItemPokemon | null;
  politics?: DaysaveItemPolitic | null;
  PrequelMemes?: DaysaveItemPrequelMeme | null;
  PS4?: DaysaveItemPS4 | null;
  reactiongifs?: DaysaveItemReactiongif | null;
  relationship_advice?: DaysaveItemRelationship_advice | null;
  relationships?: DaysaveItemRelationship | null;
  rickandmorty?: DaysaveItemRickandmorty | null;
  Roadcam?: DaysaveItemRoadcam | null;
  RoastMe?: DaysaveItemRoastMe | null;
  science?: DaysaveItemScience | null;
  sex?: DaysaveItemSex | null;
  shittyfoodporn?: DaysaveItemShittyfoodporn | null;
  Showerthoughts?: DaysaveItemShowerthought | null;
  SkincareAddiction?: DaysaveItemSkincareAddiction | null;
  slowcooking?: DaysaveItemSlowcooking | null;
  space?: DaysaveItemSpace | null;
  sports?: DaysaveItemSport | null;
  starterpacks?: DaysaveItemStarterpack | null;
  StarWars?: DaysaveItemStarWar | null;
  streetwear?: DaysaveItemStreetwear | null;
  tattoos?: DaysaveItemTattoo | null;
  teenagers?: DaysaveItemTeenager | null;
  television?: DaysaveItemTelevision | null;
  thatHappened?: DaysaveItemThatHappened | null;
  The_Donald?: DaysaveItemThe_Donald | null;
  therewasanattempt?: DaysaveItemTherewasanattempt | null;
  Tinder?: DaysaveItemTinder | null;
  todayilearned?: DaysaveItemTodayilearned | null;
  trashy?: DaysaveItemTrashy | null;
  travel?: DaysaveItemTravel | null;
  trees?: DaysaveItemTree | null;
  TwoXChromosomes?: DaysaveItemTwoXChromosome | null;
  Unexpected?: DaysaveItemUnexpected | null;
  videos?: DaysaveItemVideo | null;
  WatchPeopleDieInside?: DaysaveItemWatchPeopleDieInside | null;
  Wellthatsucks?: DaysaveItemWellthatsuck | null;
  Whatcouldgowrong?: DaysaveItemWhatcouldgowrong | null;
  WhitePeopleTwitter?: DaysaveItemWhitePeopleTwitter | null;
  wholesomememes?: DaysaveItemWholesomememe | null;
  woodworking?: DaysaveItemWoodworking | null;
  worldnews?: DaysaveItemWorldnew | null;
  WritingPrompts?: DaysaveItemWritingPrompt | null;
  WTF?: DaysaveItemWTF | null;
  xboxone?: DaysaveItemXboxone | null;
  YouShouldKnow?: DaysaveItemYouShouldKnow | null;
}

export interface DaysaveItemPromise extends Promise<DaysaveItem>, Fragmentable {
  AdviceAnimals: <T = DaysaveItemAdviceAnimalPromise>() => T;
  Android: <T = DaysaveItemAndroidPromise>() => T;
  AnimalsBeingDerps: <T = DaysaveItemAnimalsBeingDerpPromise>() => T;
  AnimalsBeingJerks: <T = DaysaveItemAnimalsBeingJerkPromise>() => T;
  anime: <T = DaysaveItemAnimePromise>() => T;
  apple: <T = DaysaveItemApplePromise>() => T;
  AskMen: <T = DaysaveItemAskManPromise>() => T;
  AskReddit: <T = DaysaveItemAskRedditPromise>() => T;
  askscience: <T = DaysaveItemAsksciencePromise>() => T;
  AskWomen: <T = DaysaveItemAskWomanPromise>() => T;
  assholedesign: <T = DaysaveItemAssholedesignPromise>() => T;
  aww: <T = DaysaveItemAwwPromise>() => T;
  baseball: <T = DaysaveItemBaseballPromise>() => T;
  BlackPeopleTwitter: <T = DaysaveItemBlackPeopleTwitterPromise>() => T;
  boardgames: <T = DaysaveItemBoardgamePromise>() => T;
  buildapc: <T = DaysaveItemBuildapcPromise>() => T;
  cars: <T = DaysaveItemCarPromise>() => T;
  cats: <T = DaysaveItemCatPromise>() => T;
  ChoosingBeggars: <T = DaysaveItemChoosingBeggarPromise>() => T;
  comics: <T = DaysaveItemComicPromise>() => T;
  conspiracy: <T = DaysaveItemConspiracyPromise>() => T;
  Cooking: <T = DaysaveItemCookingPromise>() => T;
  CrappyDesign: <T = DaysaveItemCrappyDesignPromise>() => T;
  dankmemes: <T = DaysaveItemDankmemePromise>() => T;
  DestinyTheGame: <T = DaysaveItemDestinyTheGamePromise>() => T;
  DnD: <T = DaysaveItemDnDPromise>() => T;
  Documentaries: <T = DaysaveItemDocumentaryPromise>() => T;
  dogs: <T = DaysaveItemDogPromise>() => T;
  drawing: <T = DaysaveItemDrawingPromise>() => T;
  DunderMifflin: <T = DaysaveItemDunderMifflinPromise>() => T;
  EarthPorn: <T = DaysaveItemEarthPornPromise>() => T;
  europe: <T = DaysaveItemEuropePromise>() => T;
  explainlikeimfive: <T = DaysaveItemExplainlikeimfivePromise>() => T;
  Eyebleach: <T = DaysaveItemEyebleachPromise>() => T;
  Fitness: <T = DaysaveItemFitnessPromise>() => T;
  food: <T = DaysaveItemFoodPromise>() => T;
  FoodPorn: <T = DaysaveItemFoodPornPromise>() => T;
  FortNiteBR: <T = DaysaveItemFortNiteBRPromise>() => T;
  Frugal: <T = DaysaveItemFrugalPromise>() => T;
  funny: <T = DaysaveItemFunnyPromise>() => T;
  Futurology: <T = DaysaveItemFuturologyPromise>() => T;
  gadgets: <T = DaysaveItemGadgetPromise>() => T;
  Games: <T = DaysaveItemGamePromise>() => T;
  gaming: <T = DaysaveItemGamingPromise>() => T;
  gardening: <T = DaysaveItemGardeningPromise>() => T;
  gifs: <T = DaysaveItemGifPromise>() => T;
  gonewild: <T = DaysaveItemGonewildPromise>() => T;
  hiphopheads: <T = DaysaveItemHiphopheadPromise>() => T;
  hockey: <T = DaysaveItemHockeyPromise>() => T;
  iamverysmart: <T = DaysaveItemIamverysmartPromise>() => T;
  instant_regret: <T = DaysaveItemInstant_regretPromise>() => T;
  interestingasfuck: <T = DaysaveItemInterestingasfuckPromise>() => T;
  Jokes: <T = DaysaveItemJokePromise>() => T;
  leagueoflegends: <T = DaysaveItemLeagueoflegendPromise>() => T;
  legaladvice: <T = DaysaveItemLegaladvicePromise>() => T;
  LifeProTips: <T = DaysaveItemLifeProTipPromise>() => T;
  listentothis: <T = DaysaveItemListentothiPromise>() => T;
  MadeMeSmile: <T = DaysaveItemMadeMeSmilePromise>() => T;
  me_irl: <T = DaysaveItemMe_irlPromise>() => T;
  MemeEconomy: <T = DaysaveItemMemeEconomyPromise>() => T;
  memes: <T = DaysaveItemMemePromise>() => T;
  mildlyinfuriating: <T = DaysaveItemMildlyinfuriatingPromise>() => T;
  mildlyinteresting: <T = DaysaveItemMildlyinterestingPromise>() => T;
  Minecraft: <T = DaysaveItemMinecraftPromise>() => T;
  MMA: <T = DaysaveItemMMAPromise>() => T;
  MovieDetails: <T = DaysaveItemMovieDetailPromise>() => T;
  movies: <T = DaysaveItemMoviePromise>() => T;
  MurderedByWords: <T = DaysaveItemMurderedByWordPromise>() => T;
  natureismetal: <T = DaysaveItemNatureismetalPromise>() => T;
  nba: <T = DaysaveItemNbaPromise>() => T;
  nevertellmetheodds: <T = DaysaveItemNevertellmetheoddPromise>() => T;
  news: <T = DaysaveItemNewsPromise>() => T;
  nfl: <T = DaysaveItemNflPromise>() => T;
  niceguys: <T = DaysaveItemNiceguyPromise>() => T;
  NintendoSwitch: <T = DaysaveItemNintendoSwitchPromise>() => T;
  nosleep: <T = DaysaveItemNosleepPromise>() => T;
  NoStupidQuestions: <T = DaysaveItemNoStupidQuestionPromise>() => T;
  nottheonion: <T = DaysaveItemNottheonionPromise>() => T;
  oddlysatisfying: <T = DaysaveItemOddlysatisfyingPromise>() => T;
  OldSchoolCool: <T = DaysaveItemOldSchoolCoolPromise>() => T;
  Overwatch: <T = DaysaveItemOverwatchPromise>() => T;
  pcgaming: <T = DaysaveItemPcgamingPromise>() => T;
  pcmasterrace: <T = DaysaveItemPcmasterracePromise>() => T;
  personalfinance: <T = DaysaveItemPersonalfinancePromise>() => T;
  PewdiepieSubmissions: <T = DaysaveItemPewdiepieSubmissionPromise>() => T;
  photography: <T = DaysaveItemPhotographyPromise>() => T;
  pics: <T = DaysaveItemPicPromise>() => T;
  pokemon: <T = DaysaveItemPokemonPromise>() => T;
  politics: <T = DaysaveItemPoliticPromise>() => T;
  PrequelMemes: <T = DaysaveItemPrequelMemePromise>() => T;
  PS4: <T = DaysaveItemPS4Promise>() => T;
  reactiongifs: <T = DaysaveItemReactiongifPromise>() => T;
  relationship_advice: <T = DaysaveItemRelationship_advicePromise>() => T;
  relationships: <T = DaysaveItemRelationshipPromise>() => T;
  rickandmorty: <T = DaysaveItemRickandmortyPromise>() => T;
  Roadcam: <T = DaysaveItemRoadcamPromise>() => T;
  RoastMe: <T = DaysaveItemRoastMePromise>() => T;
  science: <T = DaysaveItemSciencePromise>() => T;
  sex: <T = DaysaveItemSexPromise>() => T;
  shittyfoodporn: <T = DaysaveItemShittyfoodpornPromise>() => T;
  Showerthoughts: <T = DaysaveItemShowerthoughtPromise>() => T;
  SkincareAddiction: <T = DaysaveItemSkincareAddictionPromise>() => T;
  slowcooking: <T = DaysaveItemSlowcookingPromise>() => T;
  space: <T = DaysaveItemSpacePromise>() => T;
  sports: <T = DaysaveItemSportPromise>() => T;
  starterpacks: <T = DaysaveItemStarterpackPromise>() => T;
  StarWars: <T = DaysaveItemStarWarPromise>() => T;
  streetwear: <T = DaysaveItemStreetwearPromise>() => T;
  tattoos: <T = DaysaveItemTattooPromise>() => T;
  teenagers: <T = DaysaveItemTeenagerPromise>() => T;
  television: <T = DaysaveItemTelevisionPromise>() => T;
  thatHappened: <T = DaysaveItemThatHappenedPromise>() => T;
  The_Donald: <T = DaysaveItemThe_DonaldPromise>() => T;
  therewasanattempt: <T = DaysaveItemTherewasanattemptPromise>() => T;
  Tinder: <T = DaysaveItemTinderPromise>() => T;
  todayilearned: <T = DaysaveItemTodayilearnedPromise>() => T;
  trashy: <T = DaysaveItemTrashyPromise>() => T;
  travel: <T = DaysaveItemTravelPromise>() => T;
  trees: <T = DaysaveItemTreePromise>() => T;
  TwoXChromosomes: <T = DaysaveItemTwoXChromosomePromise>() => T;
  Unexpected: <T = DaysaveItemUnexpectedPromise>() => T;
  videos: <T = DaysaveItemVideoPromise>() => T;
  WatchPeopleDieInside: <T = DaysaveItemWatchPeopleDieInsidePromise>() => T;
  Wellthatsucks: <T = DaysaveItemWellthatsuckPromise>() => T;
  Whatcouldgowrong: <T = DaysaveItemWhatcouldgowrongPromise>() => T;
  WhitePeopleTwitter: <T = DaysaveItemWhitePeopleTwitterPromise>() => T;
  wholesomememes: <T = DaysaveItemWholesomememePromise>() => T;
  woodworking: <T = DaysaveItemWoodworkingPromise>() => T;
  worldnews: <T = DaysaveItemWorldnewPromise>() => T;
  WritingPrompts: <T = DaysaveItemWritingPromptPromise>() => T;
  WTF: <T = DaysaveItemWTFPromise>() => T;
  xboxone: <T = DaysaveItemXboxonePromise>() => T;
  YouShouldKnow: <T = DaysaveItemYouShouldKnowPromise>() => T;
}

export interface DaysaveItemSubscription
  extends Promise<AsyncIterator<DaysaveItem>>,
    Fragmentable {
  AdviceAnimals: <T = DaysaveItemAdviceAnimalSubscription>() => T;
  Android: <T = DaysaveItemAndroidSubscription>() => T;
  AnimalsBeingDerps: <T = DaysaveItemAnimalsBeingDerpSubscription>() => T;
  AnimalsBeingJerks: <T = DaysaveItemAnimalsBeingJerkSubscription>() => T;
  anime: <T = DaysaveItemAnimeSubscription>() => T;
  apple: <T = DaysaveItemAppleSubscription>() => T;
  AskMen: <T = DaysaveItemAskManSubscription>() => T;
  AskReddit: <T = DaysaveItemAskRedditSubscription>() => T;
  askscience: <T = DaysaveItemAskscienceSubscription>() => T;
  AskWomen: <T = DaysaveItemAskWomanSubscription>() => T;
  assholedesign: <T = DaysaveItemAssholedesignSubscription>() => T;
  aww: <T = DaysaveItemAwwSubscription>() => T;
  baseball: <T = DaysaveItemBaseballSubscription>() => T;
  BlackPeopleTwitter: <T = DaysaveItemBlackPeopleTwitterSubscription>() => T;
  boardgames: <T = DaysaveItemBoardgameSubscription>() => T;
  buildapc: <T = DaysaveItemBuildapcSubscription>() => T;
  cars: <T = DaysaveItemCarSubscription>() => T;
  cats: <T = DaysaveItemCatSubscription>() => T;
  ChoosingBeggars: <T = DaysaveItemChoosingBeggarSubscription>() => T;
  comics: <T = DaysaveItemComicSubscription>() => T;
  conspiracy: <T = DaysaveItemConspiracySubscription>() => T;
  Cooking: <T = DaysaveItemCookingSubscription>() => T;
  CrappyDesign: <T = DaysaveItemCrappyDesignSubscription>() => T;
  dankmemes: <T = DaysaveItemDankmemeSubscription>() => T;
  DestinyTheGame: <T = DaysaveItemDestinyTheGameSubscription>() => T;
  DnD: <T = DaysaveItemDnDSubscription>() => T;
  Documentaries: <T = DaysaveItemDocumentarySubscription>() => T;
  dogs: <T = DaysaveItemDogSubscription>() => T;
  drawing: <T = DaysaveItemDrawingSubscription>() => T;
  DunderMifflin: <T = DaysaveItemDunderMifflinSubscription>() => T;
  EarthPorn: <T = DaysaveItemEarthPornSubscription>() => T;
  europe: <T = DaysaveItemEuropeSubscription>() => T;
  explainlikeimfive: <T = DaysaveItemExplainlikeimfiveSubscription>() => T;
  Eyebleach: <T = DaysaveItemEyebleachSubscription>() => T;
  Fitness: <T = DaysaveItemFitnessSubscription>() => T;
  food: <T = DaysaveItemFoodSubscription>() => T;
  FoodPorn: <T = DaysaveItemFoodPornSubscription>() => T;
  FortNiteBR: <T = DaysaveItemFortNiteBRSubscription>() => T;
  Frugal: <T = DaysaveItemFrugalSubscription>() => T;
  funny: <T = DaysaveItemFunnySubscription>() => T;
  Futurology: <T = DaysaveItemFuturologySubscription>() => T;
  gadgets: <T = DaysaveItemGadgetSubscription>() => T;
  Games: <T = DaysaveItemGameSubscription>() => T;
  gaming: <T = DaysaveItemGamingSubscription>() => T;
  gardening: <T = DaysaveItemGardeningSubscription>() => T;
  gifs: <T = DaysaveItemGifSubscription>() => T;
  gonewild: <T = DaysaveItemGonewildSubscription>() => T;
  hiphopheads: <T = DaysaveItemHiphopheadSubscription>() => T;
  hockey: <T = DaysaveItemHockeySubscription>() => T;
  iamverysmart: <T = DaysaveItemIamverysmartSubscription>() => T;
  instant_regret: <T = DaysaveItemInstant_regretSubscription>() => T;
  interestingasfuck: <T = DaysaveItemInterestingasfuckSubscription>() => T;
  Jokes: <T = DaysaveItemJokeSubscription>() => T;
  leagueoflegends: <T = DaysaveItemLeagueoflegendSubscription>() => T;
  legaladvice: <T = DaysaveItemLegaladviceSubscription>() => T;
  LifeProTips: <T = DaysaveItemLifeProTipSubscription>() => T;
  listentothis: <T = DaysaveItemListentothiSubscription>() => T;
  MadeMeSmile: <T = DaysaveItemMadeMeSmileSubscription>() => T;
  me_irl: <T = DaysaveItemMe_irlSubscription>() => T;
  MemeEconomy: <T = DaysaveItemMemeEconomySubscription>() => T;
  memes: <T = DaysaveItemMemeSubscription>() => T;
  mildlyinfuriating: <T = DaysaveItemMildlyinfuriatingSubscription>() => T;
  mildlyinteresting: <T = DaysaveItemMildlyinterestingSubscription>() => T;
  Minecraft: <T = DaysaveItemMinecraftSubscription>() => T;
  MMA: <T = DaysaveItemMMASubscription>() => T;
  MovieDetails: <T = DaysaveItemMovieDetailSubscription>() => T;
  movies: <T = DaysaveItemMovieSubscription>() => T;
  MurderedByWords: <T = DaysaveItemMurderedByWordSubscription>() => T;
  natureismetal: <T = DaysaveItemNatureismetalSubscription>() => T;
  nba: <T = DaysaveItemNbaSubscription>() => T;
  nevertellmetheodds: <T = DaysaveItemNevertellmetheoddSubscription>() => T;
  news: <T = DaysaveItemNewsSubscription>() => T;
  nfl: <T = DaysaveItemNflSubscription>() => T;
  niceguys: <T = DaysaveItemNiceguySubscription>() => T;
  NintendoSwitch: <T = DaysaveItemNintendoSwitchSubscription>() => T;
  nosleep: <T = DaysaveItemNosleepSubscription>() => T;
  NoStupidQuestions: <T = DaysaveItemNoStupidQuestionSubscription>() => T;
  nottheonion: <T = DaysaveItemNottheonionSubscription>() => T;
  oddlysatisfying: <T = DaysaveItemOddlysatisfyingSubscription>() => T;
  OldSchoolCool: <T = DaysaveItemOldSchoolCoolSubscription>() => T;
  Overwatch: <T = DaysaveItemOverwatchSubscription>() => T;
  pcgaming: <T = DaysaveItemPcgamingSubscription>() => T;
  pcmasterrace: <T = DaysaveItemPcmasterraceSubscription>() => T;
  personalfinance: <T = DaysaveItemPersonalfinanceSubscription>() => T;
  PewdiepieSubmissions: <T = DaysaveItemPewdiepieSubmissionSubscription>() => T;
  photography: <T = DaysaveItemPhotographySubscription>() => T;
  pics: <T = DaysaveItemPicSubscription>() => T;
  pokemon: <T = DaysaveItemPokemonSubscription>() => T;
  politics: <T = DaysaveItemPoliticSubscription>() => T;
  PrequelMemes: <T = DaysaveItemPrequelMemeSubscription>() => T;
  PS4: <T = DaysaveItemPS4Subscription>() => T;
  reactiongifs: <T = DaysaveItemReactiongifSubscription>() => T;
  relationship_advice: <T = DaysaveItemRelationship_adviceSubscription>() => T;
  relationships: <T = DaysaveItemRelationshipSubscription>() => T;
  rickandmorty: <T = DaysaveItemRickandmortySubscription>() => T;
  Roadcam: <T = DaysaveItemRoadcamSubscription>() => T;
  RoastMe: <T = DaysaveItemRoastMeSubscription>() => T;
  science: <T = DaysaveItemScienceSubscription>() => T;
  sex: <T = DaysaveItemSexSubscription>() => T;
  shittyfoodporn: <T = DaysaveItemShittyfoodpornSubscription>() => T;
  Showerthoughts: <T = DaysaveItemShowerthoughtSubscription>() => T;
  SkincareAddiction: <T = DaysaveItemSkincareAddictionSubscription>() => T;
  slowcooking: <T = DaysaveItemSlowcookingSubscription>() => T;
  space: <T = DaysaveItemSpaceSubscription>() => T;
  sports: <T = DaysaveItemSportSubscription>() => T;
  starterpacks: <T = DaysaveItemStarterpackSubscription>() => T;
  StarWars: <T = DaysaveItemStarWarSubscription>() => T;
  streetwear: <T = DaysaveItemStreetwearSubscription>() => T;
  tattoos: <T = DaysaveItemTattooSubscription>() => T;
  teenagers: <T = DaysaveItemTeenagerSubscription>() => T;
  television: <T = DaysaveItemTelevisionSubscription>() => T;
  thatHappened: <T = DaysaveItemThatHappenedSubscription>() => T;
  The_Donald: <T = DaysaveItemThe_DonaldSubscription>() => T;
  therewasanattempt: <T = DaysaveItemTherewasanattemptSubscription>() => T;
  Tinder: <T = DaysaveItemTinderSubscription>() => T;
  todayilearned: <T = DaysaveItemTodayilearnedSubscription>() => T;
  trashy: <T = DaysaveItemTrashySubscription>() => T;
  travel: <T = DaysaveItemTravelSubscription>() => T;
  trees: <T = DaysaveItemTreeSubscription>() => T;
  TwoXChromosomes: <T = DaysaveItemTwoXChromosomeSubscription>() => T;
  Unexpected: <T = DaysaveItemUnexpectedSubscription>() => T;
  videos: <T = DaysaveItemVideoSubscription>() => T;
  WatchPeopleDieInside: <
    T = DaysaveItemWatchPeopleDieInsideSubscription
  >() => T;
  Wellthatsucks: <T = DaysaveItemWellthatsuckSubscription>() => T;
  Whatcouldgowrong: <T = DaysaveItemWhatcouldgowrongSubscription>() => T;
  WhitePeopleTwitter: <T = DaysaveItemWhitePeopleTwitterSubscription>() => T;
  wholesomememes: <T = DaysaveItemWholesomememeSubscription>() => T;
  woodworking: <T = DaysaveItemWoodworkingSubscription>() => T;
  worldnews: <T = DaysaveItemWorldnewSubscription>() => T;
  WritingPrompts: <T = DaysaveItemWritingPromptSubscription>() => T;
  WTF: <T = DaysaveItemWTFSubscription>() => T;
  xboxone: <T = DaysaveItemXboxoneSubscription>() => T;
  YouShouldKnow: <T = DaysaveItemYouShouldKnowSubscription>() => T;
}

export interface DaysaveItemAdviceAnimal {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAdviceAnimalPromise
  extends Promise<DaysaveItemAdviceAnimal>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAdviceAnimalSubscription
  extends Promise<AsyncIterator<DaysaveItemAdviceAnimal>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemAndroid {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAndroidPromise
  extends Promise<DaysaveItemAndroid>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAndroidSubscription
  extends Promise<AsyncIterator<DaysaveItemAndroid>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemAnimalsBeingDerp {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAnimalsBeingDerpPromise
  extends Promise<DaysaveItemAnimalsBeingDerp>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAnimalsBeingDerpSubscription
  extends Promise<AsyncIterator<DaysaveItemAnimalsBeingDerp>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemAnimalsBeingJerk {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAnimalsBeingJerkPromise
  extends Promise<DaysaveItemAnimalsBeingJerk>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAnimalsBeingJerkSubscription
  extends Promise<AsyncIterator<DaysaveItemAnimalsBeingJerk>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemAnime {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAnimePromise
  extends Promise<DaysaveItemAnime>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAnimeSubscription
  extends Promise<AsyncIterator<DaysaveItemAnime>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemApple {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemApplePromise
  extends Promise<DaysaveItemApple>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAppleSubscription
  extends Promise<AsyncIterator<DaysaveItemApple>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemAskMan {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAskManPromise
  extends Promise<DaysaveItemAskMan>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAskManSubscription
  extends Promise<AsyncIterator<DaysaveItemAskMan>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemAskReddit {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAskRedditPromise
  extends Promise<DaysaveItemAskReddit>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAskRedditSubscription
  extends Promise<AsyncIterator<DaysaveItemAskReddit>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemAskscience {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAsksciencePromise
  extends Promise<DaysaveItemAskscience>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAskscienceSubscription
  extends Promise<AsyncIterator<DaysaveItemAskscience>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemAskWoman {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAskWomanPromise
  extends Promise<DaysaveItemAskWoman>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAskWomanSubscription
  extends Promise<AsyncIterator<DaysaveItemAskWoman>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemAssholedesign {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAssholedesignPromise
  extends Promise<DaysaveItemAssholedesign>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAssholedesignSubscription
  extends Promise<AsyncIterator<DaysaveItemAssholedesign>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemAww {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemAwwPromise
  extends Promise<DaysaveItemAww>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemAwwSubscription
  extends Promise<AsyncIterator<DaysaveItemAww>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemBaseball {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBaseballPromise
  extends Promise<DaysaveItemBaseball>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemBaseballSubscription
  extends Promise<AsyncIterator<DaysaveItemBaseball>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemBlackPeopleTwitter {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBlackPeopleTwitterPromise
  extends Promise<DaysaveItemBlackPeopleTwitter>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemBlackPeopleTwitterSubscription
  extends Promise<AsyncIterator<DaysaveItemBlackPeopleTwitter>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemBoardgame {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBoardgamePromise
  extends Promise<DaysaveItemBoardgame>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemBoardgameSubscription
  extends Promise<AsyncIterator<DaysaveItemBoardgame>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemBuildapc {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemBuildapcPromise
  extends Promise<DaysaveItemBuildapc>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemBuildapcSubscription
  extends Promise<AsyncIterator<DaysaveItemBuildapc>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemCar {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCarPromise
  extends Promise<DaysaveItemCar>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemCarSubscription
  extends Promise<AsyncIterator<DaysaveItemCar>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemCat {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCatPromise
  extends Promise<DaysaveItemCat>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemCatSubscription
  extends Promise<AsyncIterator<DaysaveItemCat>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemChoosingBeggar {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemChoosingBeggarPromise
  extends Promise<DaysaveItemChoosingBeggar>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemChoosingBeggarSubscription
  extends Promise<AsyncIterator<DaysaveItemChoosingBeggar>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemComic {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemComicPromise
  extends Promise<DaysaveItemComic>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemComicSubscription
  extends Promise<AsyncIterator<DaysaveItemComic>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemConspiracy {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemConspiracyPromise
  extends Promise<DaysaveItemConspiracy>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemConspiracySubscription
  extends Promise<AsyncIterator<DaysaveItemConspiracy>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemCooking {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCookingPromise
  extends Promise<DaysaveItemCooking>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemCookingSubscription
  extends Promise<AsyncIterator<DaysaveItemCooking>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemCrappyDesign {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemCrappyDesignPromise
  extends Promise<DaysaveItemCrappyDesign>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemCrappyDesignSubscription
  extends Promise<AsyncIterator<DaysaveItemCrappyDesign>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemDankmeme {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDankmemePromise
  extends Promise<DaysaveItemDankmeme>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemDankmemeSubscription
  extends Promise<AsyncIterator<DaysaveItemDankmeme>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemDestinyTheGame {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDestinyTheGamePromise
  extends Promise<DaysaveItemDestinyTheGame>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemDestinyTheGameSubscription
  extends Promise<AsyncIterator<DaysaveItemDestinyTheGame>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemDnD {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDnDPromise
  extends Promise<DaysaveItemDnD>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemDnDSubscription
  extends Promise<AsyncIterator<DaysaveItemDnD>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemDocumentary {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDocumentaryPromise
  extends Promise<DaysaveItemDocumentary>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemDocumentarySubscription
  extends Promise<AsyncIterator<DaysaveItemDocumentary>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemDog {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDogPromise
  extends Promise<DaysaveItemDog>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemDogSubscription
  extends Promise<AsyncIterator<DaysaveItemDog>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemDrawing {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDrawingPromise
  extends Promise<DaysaveItemDrawing>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemDrawingSubscription
  extends Promise<AsyncIterator<DaysaveItemDrawing>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemDunderMifflin {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemDunderMifflinPromise
  extends Promise<DaysaveItemDunderMifflin>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemDunderMifflinSubscription
  extends Promise<AsyncIterator<DaysaveItemDunderMifflin>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemEarthPorn {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemEarthPornPromise
  extends Promise<DaysaveItemEarthPorn>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemEarthPornSubscription
  extends Promise<AsyncIterator<DaysaveItemEarthPorn>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemEurope {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemEuropePromise
  extends Promise<DaysaveItemEurope>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemEuropeSubscription
  extends Promise<AsyncIterator<DaysaveItemEurope>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemExplainlikeimfive {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemExplainlikeimfivePromise
  extends Promise<DaysaveItemExplainlikeimfive>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemExplainlikeimfiveSubscription
  extends Promise<AsyncIterator<DaysaveItemExplainlikeimfive>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemEyebleach {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemEyebleachPromise
  extends Promise<DaysaveItemEyebleach>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemEyebleachSubscription
  extends Promise<AsyncIterator<DaysaveItemEyebleach>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemFitness {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFitnessPromise
  extends Promise<DaysaveItemFitness>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemFitnessSubscription
  extends Promise<AsyncIterator<DaysaveItemFitness>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemFood {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFoodPromise
  extends Promise<DaysaveItemFood>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemFoodSubscription
  extends Promise<AsyncIterator<DaysaveItemFood>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemFoodPorn {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFoodPornPromise
  extends Promise<DaysaveItemFoodPorn>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemFoodPornSubscription
  extends Promise<AsyncIterator<DaysaveItemFoodPorn>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemFortNiteBR {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFortNiteBRPromise
  extends Promise<DaysaveItemFortNiteBR>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemFortNiteBRSubscription
  extends Promise<AsyncIterator<DaysaveItemFortNiteBR>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemFrugal {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFrugalPromise
  extends Promise<DaysaveItemFrugal>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemFrugalSubscription
  extends Promise<AsyncIterator<DaysaveItemFrugal>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemFunny {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFunnyPromise
  extends Promise<DaysaveItemFunny>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemFunnySubscription
  extends Promise<AsyncIterator<DaysaveItemFunny>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemFuturology {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemFuturologyPromise
  extends Promise<DaysaveItemFuturology>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemFuturologySubscription
  extends Promise<AsyncIterator<DaysaveItemFuturology>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemGadget {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGadgetPromise
  extends Promise<DaysaveItemGadget>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemGadgetSubscription
  extends Promise<AsyncIterator<DaysaveItemGadget>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemGame {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGamePromise
  extends Promise<DaysaveItemGame>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemGameSubscription
  extends Promise<AsyncIterator<DaysaveItemGame>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemGaming {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGamingPromise
  extends Promise<DaysaveItemGaming>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemGamingSubscription
  extends Promise<AsyncIterator<DaysaveItemGaming>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemGardening {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGardeningPromise
  extends Promise<DaysaveItemGardening>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemGardeningSubscription
  extends Promise<AsyncIterator<DaysaveItemGardening>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemGif {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGifPromise
  extends Promise<DaysaveItemGif>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemGifSubscription
  extends Promise<AsyncIterator<DaysaveItemGif>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemGonewild {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemGonewildPromise
  extends Promise<DaysaveItemGonewild>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemGonewildSubscription
  extends Promise<AsyncIterator<DaysaveItemGonewild>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemHiphophead {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemHiphopheadPromise
  extends Promise<DaysaveItemHiphophead>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemHiphopheadSubscription
  extends Promise<AsyncIterator<DaysaveItemHiphophead>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemHockey {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemHockeyPromise
  extends Promise<DaysaveItemHockey>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemHockeySubscription
  extends Promise<AsyncIterator<DaysaveItemHockey>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemIamverysmart {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemIamverysmartPromise
  extends Promise<DaysaveItemIamverysmart>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemIamverysmartSubscription
  extends Promise<AsyncIterator<DaysaveItemIamverysmart>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemInstant_regret {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemInstant_regretPromise
  extends Promise<DaysaveItemInstant_regret>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemInstant_regretSubscription
  extends Promise<AsyncIterator<DaysaveItemInstant_regret>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemInterestingasfuck {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemInterestingasfuckPromise
  extends Promise<DaysaveItemInterestingasfuck>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemInterestingasfuckSubscription
  extends Promise<AsyncIterator<DaysaveItemInterestingasfuck>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemJoke {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemJokePromise
  extends Promise<DaysaveItemJoke>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemJokeSubscription
  extends Promise<AsyncIterator<DaysaveItemJoke>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemLeagueoflegend {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemLeagueoflegendPromise
  extends Promise<DaysaveItemLeagueoflegend>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemLeagueoflegendSubscription
  extends Promise<AsyncIterator<DaysaveItemLeagueoflegend>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemLegaladvice {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemLegaladvicePromise
  extends Promise<DaysaveItemLegaladvice>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemLegaladviceSubscription
  extends Promise<AsyncIterator<DaysaveItemLegaladvice>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemLifeProTip {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemLifeProTipPromise
  extends Promise<DaysaveItemLifeProTip>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemLifeProTipSubscription
  extends Promise<AsyncIterator<DaysaveItemLifeProTip>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemListentothi {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemListentothiPromise
  extends Promise<DaysaveItemListentothi>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemListentothiSubscription
  extends Promise<AsyncIterator<DaysaveItemListentothi>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemMadeMeSmile {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMadeMeSmilePromise
  extends Promise<DaysaveItemMadeMeSmile>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemMadeMeSmileSubscription
  extends Promise<AsyncIterator<DaysaveItemMadeMeSmile>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemMe_irl {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMe_irlPromise
  extends Promise<DaysaveItemMe_irl>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemMe_irlSubscription
  extends Promise<AsyncIterator<DaysaveItemMe_irl>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemMemeEconomy {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMemeEconomyPromise
  extends Promise<DaysaveItemMemeEconomy>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemMemeEconomySubscription
  extends Promise<AsyncIterator<DaysaveItemMemeEconomy>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemMeme {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMemePromise
  extends Promise<DaysaveItemMeme>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemMemeSubscription
  extends Promise<AsyncIterator<DaysaveItemMeme>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemMildlyinfuriating {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMildlyinfuriatingPromise
  extends Promise<DaysaveItemMildlyinfuriating>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemMildlyinfuriatingSubscription
  extends Promise<AsyncIterator<DaysaveItemMildlyinfuriating>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemMildlyinteresting {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMildlyinterestingPromise
  extends Promise<DaysaveItemMildlyinteresting>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemMildlyinterestingSubscription
  extends Promise<AsyncIterator<DaysaveItemMildlyinteresting>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemMinecraft {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMinecraftPromise
  extends Promise<DaysaveItemMinecraft>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemMinecraftSubscription
  extends Promise<AsyncIterator<DaysaveItemMinecraft>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemMMA {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMMAPromise
  extends Promise<DaysaveItemMMA>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemMMASubscription
  extends Promise<AsyncIterator<DaysaveItemMMA>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemMovieDetail {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMovieDetailPromise
  extends Promise<DaysaveItemMovieDetail>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemMovieDetailSubscription
  extends Promise<AsyncIterator<DaysaveItemMovieDetail>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemMovie {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMoviePromise
  extends Promise<DaysaveItemMovie>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemMovieSubscription
  extends Promise<AsyncIterator<DaysaveItemMovie>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemMurderedByWord {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemMurderedByWordPromise
  extends Promise<DaysaveItemMurderedByWord>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemMurderedByWordSubscription
  extends Promise<AsyncIterator<DaysaveItemMurderedByWord>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemNatureismetal {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNatureismetalPromise
  extends Promise<DaysaveItemNatureismetal>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemNatureismetalSubscription
  extends Promise<AsyncIterator<DaysaveItemNatureismetal>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemNba {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNbaPromise
  extends Promise<DaysaveItemNba>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemNbaSubscription
  extends Promise<AsyncIterator<DaysaveItemNba>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemNevertellmetheodd {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNevertellmetheoddPromise
  extends Promise<DaysaveItemNevertellmetheodd>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemNevertellmetheoddSubscription
  extends Promise<AsyncIterator<DaysaveItemNevertellmetheodd>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemNews {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNewsPromise
  extends Promise<DaysaveItemNews>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemNewsSubscription
  extends Promise<AsyncIterator<DaysaveItemNews>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemNfl {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNflPromise
  extends Promise<DaysaveItemNfl>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemNflSubscription
  extends Promise<AsyncIterator<DaysaveItemNfl>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemNiceguy {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNiceguyPromise
  extends Promise<DaysaveItemNiceguy>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemNiceguySubscription
  extends Promise<AsyncIterator<DaysaveItemNiceguy>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemNintendoSwitch {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNintendoSwitchPromise
  extends Promise<DaysaveItemNintendoSwitch>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemNintendoSwitchSubscription
  extends Promise<AsyncIterator<DaysaveItemNintendoSwitch>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemNosleep {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNosleepPromise
  extends Promise<DaysaveItemNosleep>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemNosleepSubscription
  extends Promise<AsyncIterator<DaysaveItemNosleep>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemNoStupidQuestion {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNoStupidQuestionPromise
  extends Promise<DaysaveItemNoStupidQuestion>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemNoStupidQuestionSubscription
  extends Promise<AsyncIterator<DaysaveItemNoStupidQuestion>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemNottheonion {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemNottheonionPromise
  extends Promise<DaysaveItemNottheonion>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemNottheonionSubscription
  extends Promise<AsyncIterator<DaysaveItemNottheonion>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemOddlysatisfying {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemOddlysatisfyingPromise
  extends Promise<DaysaveItemOddlysatisfying>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemOddlysatisfyingSubscription
  extends Promise<AsyncIterator<DaysaveItemOddlysatisfying>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemOldSchoolCool {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemOldSchoolCoolPromise
  extends Promise<DaysaveItemOldSchoolCool>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemOldSchoolCoolSubscription
  extends Promise<AsyncIterator<DaysaveItemOldSchoolCool>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemOverwatch {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemOverwatchPromise
  extends Promise<DaysaveItemOverwatch>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemOverwatchSubscription
  extends Promise<AsyncIterator<DaysaveItemOverwatch>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemPcgaming {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPcgamingPromise
  extends Promise<DaysaveItemPcgaming>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemPcgamingSubscription
  extends Promise<AsyncIterator<DaysaveItemPcgaming>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemPcmasterrace {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPcmasterracePromise
  extends Promise<DaysaveItemPcmasterrace>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemPcmasterraceSubscription
  extends Promise<AsyncIterator<DaysaveItemPcmasterrace>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemPersonalfinance {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPersonalfinancePromise
  extends Promise<DaysaveItemPersonalfinance>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemPersonalfinanceSubscription
  extends Promise<AsyncIterator<DaysaveItemPersonalfinance>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemPewdiepieSubmission {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPewdiepieSubmissionPromise
  extends Promise<DaysaveItemPewdiepieSubmission>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemPewdiepieSubmissionSubscription
  extends Promise<AsyncIterator<DaysaveItemPewdiepieSubmission>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemPhotography {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPhotographyPromise
  extends Promise<DaysaveItemPhotography>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemPhotographySubscription
  extends Promise<AsyncIterator<DaysaveItemPhotography>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemPic {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPicPromise
  extends Promise<DaysaveItemPic>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemPicSubscription
  extends Promise<AsyncIterator<DaysaveItemPic>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemPokemon {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPokemonPromise
  extends Promise<DaysaveItemPokemon>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemPokemonSubscription
  extends Promise<AsyncIterator<DaysaveItemPokemon>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemPolitic {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPoliticPromise
  extends Promise<DaysaveItemPolitic>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemPoliticSubscription
  extends Promise<AsyncIterator<DaysaveItemPolitic>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemPrequelMeme {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPrequelMemePromise
  extends Promise<DaysaveItemPrequelMeme>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemPrequelMemeSubscription
  extends Promise<AsyncIterator<DaysaveItemPrequelMeme>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemPS4 {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemPS4Promise
  extends Promise<DaysaveItemPS4>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemPS4Subscription
  extends Promise<AsyncIterator<DaysaveItemPS4>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemReactiongif {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemReactiongifPromise
  extends Promise<DaysaveItemReactiongif>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemReactiongifSubscription
  extends Promise<AsyncIterator<DaysaveItemReactiongif>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemRelationship_advice {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRelationship_advicePromise
  extends Promise<DaysaveItemRelationship_advice>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemRelationship_adviceSubscription
  extends Promise<AsyncIterator<DaysaveItemRelationship_advice>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemRelationship {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRelationshipPromise
  extends Promise<DaysaveItemRelationship>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemRelationshipSubscription
  extends Promise<AsyncIterator<DaysaveItemRelationship>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemRickandmorty {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRickandmortyPromise
  extends Promise<DaysaveItemRickandmorty>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemRickandmortySubscription
  extends Promise<AsyncIterator<DaysaveItemRickandmorty>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemRoadcam {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRoadcamPromise
  extends Promise<DaysaveItemRoadcam>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemRoadcamSubscription
  extends Promise<AsyncIterator<DaysaveItemRoadcam>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemRoastMe {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemRoastMePromise
  extends Promise<DaysaveItemRoastMe>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemRoastMeSubscription
  extends Promise<AsyncIterator<DaysaveItemRoastMe>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemScience {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSciencePromise
  extends Promise<DaysaveItemScience>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemScienceSubscription
  extends Promise<AsyncIterator<DaysaveItemScience>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemSex {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSexPromise
  extends Promise<DaysaveItemSex>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemSexSubscription
  extends Promise<AsyncIterator<DaysaveItemSex>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemShittyfoodporn {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemShittyfoodpornPromise
  extends Promise<DaysaveItemShittyfoodporn>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemShittyfoodpornSubscription
  extends Promise<AsyncIterator<DaysaveItemShittyfoodporn>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemShowerthought {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemShowerthoughtPromise
  extends Promise<DaysaveItemShowerthought>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemShowerthoughtSubscription
  extends Promise<AsyncIterator<DaysaveItemShowerthought>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemSkincareAddiction {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSkincareAddictionPromise
  extends Promise<DaysaveItemSkincareAddiction>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemSkincareAddictionSubscription
  extends Promise<AsyncIterator<DaysaveItemSkincareAddiction>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemSlowcooking {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSlowcookingPromise
  extends Promise<DaysaveItemSlowcooking>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemSlowcookingSubscription
  extends Promise<AsyncIterator<DaysaveItemSlowcooking>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemSpace {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSpacePromise
  extends Promise<DaysaveItemSpace>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemSpaceSubscription
  extends Promise<AsyncIterator<DaysaveItemSpace>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemSport {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemSportPromise
  extends Promise<DaysaveItemSport>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemSportSubscription
  extends Promise<AsyncIterator<DaysaveItemSport>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemStarterpack {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemStarterpackPromise
  extends Promise<DaysaveItemStarterpack>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemStarterpackSubscription
  extends Promise<AsyncIterator<DaysaveItemStarterpack>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemStarWar {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemStarWarPromise
  extends Promise<DaysaveItemStarWar>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemStarWarSubscription
  extends Promise<AsyncIterator<DaysaveItemStarWar>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemStreetwear {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemStreetwearPromise
  extends Promise<DaysaveItemStreetwear>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemStreetwearSubscription
  extends Promise<AsyncIterator<DaysaveItemStreetwear>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemTattoo {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTattooPromise
  extends Promise<DaysaveItemTattoo>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemTattooSubscription
  extends Promise<AsyncIterator<DaysaveItemTattoo>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemTeenager {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTeenagerPromise
  extends Promise<DaysaveItemTeenager>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemTeenagerSubscription
  extends Promise<AsyncIterator<DaysaveItemTeenager>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemTelevision {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTelevisionPromise
  extends Promise<DaysaveItemTelevision>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemTelevisionSubscription
  extends Promise<AsyncIterator<DaysaveItemTelevision>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemThatHappened {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemThatHappenedPromise
  extends Promise<DaysaveItemThatHappened>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemThatHappenedSubscription
  extends Promise<AsyncIterator<DaysaveItemThatHappened>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemThe_Donald {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemThe_DonaldPromise
  extends Promise<DaysaveItemThe_Donald>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemThe_DonaldSubscription
  extends Promise<AsyncIterator<DaysaveItemThe_Donald>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemTherewasanattempt {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTherewasanattemptPromise
  extends Promise<DaysaveItemTherewasanattempt>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemTherewasanattemptSubscription
  extends Promise<AsyncIterator<DaysaveItemTherewasanattempt>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemTinder {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTinderPromise
  extends Promise<DaysaveItemTinder>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemTinderSubscription
  extends Promise<AsyncIterator<DaysaveItemTinder>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemTodayilearned {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTodayilearnedPromise
  extends Promise<DaysaveItemTodayilearned>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemTodayilearnedSubscription
  extends Promise<AsyncIterator<DaysaveItemTodayilearned>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemTrashy {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTrashyPromise
  extends Promise<DaysaveItemTrashy>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemTrashySubscription
  extends Promise<AsyncIterator<DaysaveItemTrashy>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemTravel {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTravelPromise
  extends Promise<DaysaveItemTravel>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemTravelSubscription
  extends Promise<AsyncIterator<DaysaveItemTravel>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemTree {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTreePromise
  extends Promise<DaysaveItemTree>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemTreeSubscription
  extends Promise<AsyncIterator<DaysaveItemTree>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemTwoXChromosome {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemTwoXChromosomePromise
  extends Promise<DaysaveItemTwoXChromosome>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemTwoXChromosomeSubscription
  extends Promise<AsyncIterator<DaysaveItemTwoXChromosome>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemUnexpected {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemUnexpectedPromise
  extends Promise<DaysaveItemUnexpected>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemUnexpectedSubscription
  extends Promise<AsyncIterator<DaysaveItemUnexpected>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemVideo {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemVideoPromise
  extends Promise<DaysaveItemVideo>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemVideoSubscription
  extends Promise<AsyncIterator<DaysaveItemVideo>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemWatchPeopleDieInside {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWatchPeopleDieInsidePromise
  extends Promise<DaysaveItemWatchPeopleDieInside>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemWatchPeopleDieInsideSubscription
  extends Promise<AsyncIterator<DaysaveItemWatchPeopleDieInside>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemWellthatsuck {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWellthatsuckPromise
  extends Promise<DaysaveItemWellthatsuck>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemWellthatsuckSubscription
  extends Promise<AsyncIterator<DaysaveItemWellthatsuck>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemWhatcouldgowrong {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWhatcouldgowrongPromise
  extends Promise<DaysaveItemWhatcouldgowrong>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemWhatcouldgowrongSubscription
  extends Promise<AsyncIterator<DaysaveItemWhatcouldgowrong>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemWhitePeopleTwitter {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWhitePeopleTwitterPromise
  extends Promise<DaysaveItemWhitePeopleTwitter>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemWhitePeopleTwitterSubscription
  extends Promise<AsyncIterator<DaysaveItemWhitePeopleTwitter>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemWholesomememe {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWholesomememePromise
  extends Promise<DaysaveItemWholesomememe>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemWholesomememeSubscription
  extends Promise<AsyncIterator<DaysaveItemWholesomememe>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemWoodworking {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWoodworkingPromise
  extends Promise<DaysaveItemWoodworking>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemWoodworkingSubscription
  extends Promise<AsyncIterator<DaysaveItemWoodworking>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemWorldnew {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWorldnewPromise
  extends Promise<DaysaveItemWorldnew>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemWorldnewSubscription
  extends Promise<AsyncIterator<DaysaveItemWorldnew>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemWritingPrompt {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWritingPromptPromise
  extends Promise<DaysaveItemWritingPrompt>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemWritingPromptSubscription
  extends Promise<AsyncIterator<DaysaveItemWritingPrompt>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemWTF {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemWTFPromise
  extends Promise<DaysaveItemWTF>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemWTFSubscription
  extends Promise<AsyncIterator<DaysaveItemWTF>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemXboxone {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemXboxonePromise
  extends Promise<DaysaveItemXboxone>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemXboxoneSubscription
  extends Promise<AsyncIterator<DaysaveItemXboxone>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveItemYouShouldKnow {
  com?: Int;
  found?: Int;
}

export interface DaysaveItemYouShouldKnowPromise
  extends Promise<DaysaveItemYouShouldKnow>,
    Fragmentable {
  com: () => Promise<Int>;
  found: () => Promise<Int>;
}

export interface DaysaveItemYouShouldKnowSubscription
  extends Promise<AsyncIterator<DaysaveItemYouShouldKnow>>,
    Fragmentable {
  com: () => Promise<AsyncIterator<Int>>;
  found: () => Promise<AsyncIterator<Int>>;
}

export interface DaysaveConnection {
  pageInfo: PageInfo;
  edges: DaysaveEdge[];
}

export interface DaysaveConnectionPromise
  extends Promise<DaysaveConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<DaysaveEdge>>() => T;
  aggregate: <T = AggregateDaysavePromise>() => T;
}

export interface DaysaveConnectionSubscription
  extends Promise<AsyncIterator<DaysaveConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<DaysaveEdgeSubscription>>>() => T;
  aggregate: <T = AggregateDaysaveSubscription>() => T;
}

export interface PageInfo {
  hasNextPage: Boolean;
  hasPreviousPage: Boolean;
  startCursor?: String;
  endCursor?: String;
}

export interface PageInfoPromise extends Promise<PageInfo>, Fragmentable {
  hasNextPage: () => Promise<Boolean>;
  hasPreviousPage: () => Promise<Boolean>;
  startCursor: () => Promise<String>;
  endCursor: () => Promise<String>;
}

export interface PageInfoSubscription
  extends Promise<AsyncIterator<PageInfo>>,
    Fragmentable {
  hasNextPage: () => Promise<AsyncIterator<Boolean>>;
  hasPreviousPage: () => Promise<AsyncIterator<Boolean>>;
  startCursor: () => Promise<AsyncIterator<String>>;
  endCursor: () => Promise<AsyncIterator<String>>;
}

export interface DaysaveEdge {
  node: Daysave;
  cursor: String;
}

export interface DaysaveEdgePromise extends Promise<DaysaveEdge>, Fragmentable {
  node: <T = DaysavePromise>() => T;
  cursor: () => Promise<String>;
}

export interface DaysaveEdgeSubscription
  extends Promise<AsyncIterator<DaysaveEdge>>,
    Fragmentable {
  node: <T = DaysaveSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface AggregateDaysave {
  count: Int;
}

export interface AggregateDaysavePromise
  extends Promise<AggregateDaysave>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateDaysaveSubscription
  extends Promise<AsyncIterator<AggregateDaysave>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface BatchPayload {
  count: Long;
}

export interface BatchPayloadPromise
  extends Promise<BatchPayload>,
    Fragmentable {
  count: () => Promise<Long>;
}

export interface BatchPayloadSubscription
  extends Promise<AsyncIterator<BatchPayload>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Long>>;
}

export interface DaysaveSubscriptionPayload {
  mutation: MutationType;
  node: Daysave;
  updatedFields: String[];
  previousValues: DaysavePreviousValues;
}

export interface DaysaveSubscriptionPayloadPromise
  extends Promise<DaysaveSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = DaysavePromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = DaysavePreviousValuesPromise>() => T;
}

export interface DaysaveSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<DaysaveSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = DaysaveSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = DaysavePreviousValuesSubscription>() => T;
}

export interface DaysavePreviousValues {
  _id: ID_Output;
  __v?: Int;
  createdAt?: DateTimeOutput;
  updatedAt?: DateTimeOutput;
}

export interface DaysavePreviousValuesPromise
  extends Promise<DaysavePreviousValues>,
    Fragmentable {
  _id: () => Promise<ID_Output>;
  __v: () => Promise<Int>;
  createdAt: () => Promise<DateTimeOutput>;
  updatedAt: () => Promise<DateTimeOutput>;
}

export interface DaysavePreviousValuesSubscription
  extends Promise<AsyncIterator<DaysavePreviousValues>>,
    Fragmentable {
  _id: () => Promise<AsyncIterator<ID_Output>>;
  __v: () => Promise<AsyncIterator<Int>>;
  createdAt: () => Promise<AsyncIterator<DateTimeOutput>>;
  updatedAt: () => Promise<AsyncIterator<DateTimeOutput>>;
}

/*
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
*/
export type ID_Input = string | number;
export type ID_Output = string;

/*
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. 
*/
export type Int = number;

/*
DateTime scalar input type, allowing Date
*/
export type DateTimeInput = Date | string;

/*
DateTime scalar output type, which is always a string
*/
export type DateTimeOutput = string;

/*
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
*/
export type String = string;

/*
The `Boolean` scalar type represents `true` or `false`.
*/
export type Boolean = boolean;

export type Long = string;

/**
 * Model Metadata
 */

export const models: Model[] = [
  {
    name: "Daysave",
    embedded: false
  },
  {
    name: "DaysaveItem",
    embedded: true
  },
  {
    name: "DaysaveItemAdviceAnimal",
    embedded: true
  },
  {
    name: "DaysaveItemAndroid",
    embedded: true
  },
  {
    name: "DaysaveItemAnimalsBeingDerp",
    embedded: true
  },
  {
    name: "DaysaveItemAnimalsBeingJerk",
    embedded: true
  },
  {
    name: "DaysaveItemAnime",
    embedded: true
  },
  {
    name: "DaysaveItemApple",
    embedded: true
  },
  {
    name: "DaysaveItemAskMan",
    embedded: true
  },
  {
    name: "DaysaveItemAskReddit",
    embedded: true
  },
  {
    name: "DaysaveItemAskWoman",
    embedded: true
  },
  {
    name: "DaysaveItemAskscience",
    embedded: true
  },
  {
    name: "DaysaveItemAssholedesign",
    embedded: true
  },
  {
    name: "DaysaveItemAww",
    embedded: true
  },
  {
    name: "DaysaveItemBaseball",
    embedded: true
  },
  {
    name: "DaysaveItemBlackPeopleTwitter",
    embedded: true
  },
  {
    name: "DaysaveItemBoardgame",
    embedded: true
  },
  {
    name: "DaysaveItemBuildapc",
    embedded: true
  },
  {
    name: "DaysaveItemCar",
    embedded: true
  },
  {
    name: "DaysaveItemCat",
    embedded: true
  },
  {
    name: "DaysaveItemChoosingBeggar",
    embedded: true
  },
  {
    name: "DaysaveItemComic",
    embedded: true
  },
  {
    name: "DaysaveItemConspiracy",
    embedded: true
  },
  {
    name: "DaysaveItemCooking",
    embedded: true
  },
  {
    name: "DaysaveItemCrappyDesign",
    embedded: true
  },
  {
    name: "DaysaveItemDankmeme",
    embedded: true
  },
  {
    name: "DaysaveItemDestinyTheGame",
    embedded: true
  },
  {
    name: "DaysaveItemDnD",
    embedded: true
  },
  {
    name: "DaysaveItemDocumentary",
    embedded: true
  },
  {
    name: "DaysaveItemDog",
    embedded: true
  },
  {
    name: "DaysaveItemDrawing",
    embedded: true
  },
  {
    name: "DaysaveItemDunderMifflin",
    embedded: true
  },
  {
    name: "DaysaveItemEarthPorn",
    embedded: true
  },
  {
    name: "DaysaveItemEurope",
    embedded: true
  },
  {
    name: "DaysaveItemExplainlikeimfive",
    embedded: true
  },
  {
    name: "DaysaveItemEyebleach",
    embedded: true
  },
  {
    name: "DaysaveItemFitness",
    embedded: true
  },
  {
    name: "DaysaveItemFood",
    embedded: true
  },
  {
    name: "DaysaveItemFoodPorn",
    embedded: true
  },
  {
    name: "DaysaveItemFortNiteBR",
    embedded: true
  },
  {
    name: "DaysaveItemFrugal",
    embedded: true
  },
  {
    name: "DaysaveItemFunny",
    embedded: true
  },
  {
    name: "DaysaveItemFuturology",
    embedded: true
  },
  {
    name: "DaysaveItemGadget",
    embedded: true
  },
  {
    name: "DaysaveItemGame",
    embedded: true
  },
  {
    name: "DaysaveItemGaming",
    embedded: true
  },
  {
    name: "DaysaveItemGardening",
    embedded: true
  },
  {
    name: "DaysaveItemGif",
    embedded: true
  },
  {
    name: "DaysaveItemGonewild",
    embedded: true
  },
  {
    name: "DaysaveItemHiphophead",
    embedded: true
  },
  {
    name: "DaysaveItemHockey",
    embedded: true
  },
  {
    name: "DaysaveItemIamverysmart",
    embedded: true
  },
  {
    name: "DaysaveItemInstant_regret",
    embedded: true
  },
  {
    name: "DaysaveItemInterestingasfuck",
    embedded: true
  },
  {
    name: "DaysaveItemJoke",
    embedded: true
  },
  {
    name: "DaysaveItemLeagueoflegend",
    embedded: true
  },
  {
    name: "DaysaveItemLegaladvice",
    embedded: true
  },
  {
    name: "DaysaveItemLifeProTip",
    embedded: true
  },
  {
    name: "DaysaveItemListentothi",
    embedded: true
  },
  {
    name: "DaysaveItemMMA",
    embedded: true
  },
  {
    name: "DaysaveItemMadeMeSmile",
    embedded: true
  },
  {
    name: "DaysaveItemMe_irl",
    embedded: true
  },
  {
    name: "DaysaveItemMeme",
    embedded: true
  },
  {
    name: "DaysaveItemMemeEconomy",
    embedded: true
  },
  {
    name: "DaysaveItemMildlyinfuriating",
    embedded: true
  },
  {
    name: "DaysaveItemMildlyinteresting",
    embedded: true
  },
  {
    name: "DaysaveItemMinecraft",
    embedded: true
  },
  {
    name: "DaysaveItemMovie",
    embedded: true
  },
  {
    name: "DaysaveItemMovieDetail",
    embedded: true
  },
  {
    name: "DaysaveItemMurderedByWord",
    embedded: true
  },
  {
    name: "DaysaveItemNatureismetal",
    embedded: true
  },
  {
    name: "DaysaveItemNba",
    embedded: true
  },
  {
    name: "DaysaveItemNevertellmetheodd",
    embedded: true
  },
  {
    name: "DaysaveItemNews",
    embedded: true
  },
  {
    name: "DaysaveItemNfl",
    embedded: true
  },
  {
    name: "DaysaveItemNiceguy",
    embedded: true
  },
  {
    name: "DaysaveItemNintendoSwitch",
    embedded: true
  },
  {
    name: "DaysaveItemNoStupidQuestion",
    embedded: true
  },
  {
    name: "DaysaveItemNosleep",
    embedded: true
  },
  {
    name: "DaysaveItemNottheonion",
    embedded: true
  },
  {
    name: "DaysaveItemOddlysatisfying",
    embedded: true
  },
  {
    name: "DaysaveItemOldSchoolCool",
    embedded: true
  },
  {
    name: "DaysaveItemOverwatch",
    embedded: true
  },
  {
    name: "DaysaveItemPS4",
    embedded: true
  },
  {
    name: "DaysaveItemPcgaming",
    embedded: true
  },
  {
    name: "DaysaveItemPcmasterrace",
    embedded: true
  },
  {
    name: "DaysaveItemPersonalfinance",
    embedded: true
  },
  {
    name: "DaysaveItemPewdiepieSubmission",
    embedded: true
  },
  {
    name: "DaysaveItemPhotography",
    embedded: true
  },
  {
    name: "DaysaveItemPic",
    embedded: true
  },
  {
    name: "DaysaveItemPokemon",
    embedded: true
  },
  {
    name: "DaysaveItemPolitic",
    embedded: true
  },
  {
    name: "DaysaveItemPrequelMeme",
    embedded: true
  },
  {
    name: "DaysaveItemReactiongif",
    embedded: true
  },
  {
    name: "DaysaveItemRelationship",
    embedded: true
  },
  {
    name: "DaysaveItemRelationship_advice",
    embedded: true
  },
  {
    name: "DaysaveItemRickandmorty",
    embedded: true
  },
  {
    name: "DaysaveItemRoadcam",
    embedded: true
  },
  {
    name: "DaysaveItemRoastMe",
    embedded: true
  },
  {
    name: "DaysaveItemScience",
    embedded: true
  },
  {
    name: "DaysaveItemSex",
    embedded: true
  },
  {
    name: "DaysaveItemShittyfoodporn",
    embedded: true
  },
  {
    name: "DaysaveItemShowerthought",
    embedded: true
  },
  {
    name: "DaysaveItemSkincareAddiction",
    embedded: true
  },
  {
    name: "DaysaveItemSlowcooking",
    embedded: true
  },
  {
    name: "DaysaveItemSpace",
    embedded: true
  },
  {
    name: "DaysaveItemSport",
    embedded: true
  },
  {
    name: "DaysaveItemStarWar",
    embedded: true
  },
  {
    name: "DaysaveItemStarterpack",
    embedded: true
  },
  {
    name: "DaysaveItemStreetwear",
    embedded: true
  },
  {
    name: "DaysaveItemTattoo",
    embedded: true
  },
  {
    name: "DaysaveItemTeenager",
    embedded: true
  },
  {
    name: "DaysaveItemTelevision",
    embedded: true
  },
  {
    name: "DaysaveItemThatHappened",
    embedded: true
  },
  {
    name: "DaysaveItemThe_Donald",
    embedded: true
  },
  {
    name: "DaysaveItemTherewasanattempt",
    embedded: true
  },
  {
    name: "DaysaveItemTinder",
    embedded: true
  },
  {
    name: "DaysaveItemTodayilearned",
    embedded: true
  },
  {
    name: "DaysaveItemTrashy",
    embedded: true
  },
  {
    name: "DaysaveItemTravel",
    embedded: true
  },
  {
    name: "DaysaveItemTree",
    embedded: true
  },
  {
    name: "DaysaveItemTwoXChromosome",
    embedded: true
  },
  {
    name: "DaysaveItemUnexpected",
    embedded: true
  },
  {
    name: "DaysaveItemVideo",
    embedded: true
  },
  {
    name: "DaysaveItemWTF",
    embedded: true
  },
  {
    name: "DaysaveItemWatchPeopleDieInside",
    embedded: true
  },
  {
    name: "DaysaveItemWellthatsuck",
    embedded: true
  },
  {
    name: "DaysaveItemWhatcouldgowrong",
    embedded: true
  },
  {
    name: "DaysaveItemWhitePeopleTwitter",
    embedded: true
  },
  {
    name: "DaysaveItemWholesomememe",
    embedded: true
  },
  {
    name: "DaysaveItemWoodworking",
    embedded: true
  },
  {
    name: "DaysaveItemWorldnew",
    embedded: true
  },
  {
    name: "DaysaveItemWritingPrompt",
    embedded: true
  },
  {
    name: "DaysaveItemXboxone",
    embedded: true
  },
  {
    name: "DaysaveItemYouShouldKnow",
    embedded: true
  }
];

/**
 * Type Defs
 */

export const prisma: Prisma;
